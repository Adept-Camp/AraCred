{"version":3,"sources":["components/Panel/NewIssueCuration/NewIssueCuration.js","components/Panel/NewIssueCuration/index.js"],"names":["NewIssueCuration","allIssues","selectedIssues","api","closePanel","description","setDescription","issues","setIssues","GU","issueDescriptionIndices","forEach","issue","i","push","title","length","issueDescriptions","map","join","issueNumbers","number","emptyIntArray","Array","fill","curateIssues","slice","toPromise","e","target","value","propTypes","PropTypes","arrayOf","issueShape"],"mappings":"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","file":"NewIssueCuration.ed98348a.js","sourceRoot":"../app","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  DropDownOptionsInput,\n  Form,\n  FormField,\n} from '../../Form'\nimport { useAragonApi } from '../../../api-react'\nimport { GU, TextInput } from '@aragon/ui'\nimport { usePanelManagement } from '..'\nimport { issueShape } from '../../../utils/shapes.js'\n\nconst NewIssueCuration = ({ allIssues, selectedIssues }) => {\n  const { api } = useAragonApi()\n  const { closePanel } = usePanelManagement()\n  const [ description, setDescription ] = useState('')\n  const [ issues, setIssues ] = useState()\n\n  // TODO: Work with only id fields when possible and read rest of data from cache with a context helper\n\n  // TODO: improve field checking for input errors and sanitize\n  const updateDescription = e => setDescription(e.target.value)\n  const updateIssues = e => setIssues(e.target.value)\n\n  const submitCuration = () => {\n    closePanel()\n    // TODO: maybe assign this to issueDescriptionIndices, not clear\n    let issueDescriptionIndices = []\n    selectedIssues.forEach((issue, i) => {\n      if (i === 0) {\n        issueDescriptionIndices.push(issue.title.length)\n      } else {\n        issueDescriptionIndices.push(issue.title.length)\n      }\n    })\n\n    // TODO: splitting of descriptions needs to be fixed at smart contract level\n    const issueDescriptions = selectedIssues.map(issue => issue.title).join('')\n    /* TODO: The numbers below are supposedly coming from an eventual:\n       issues.map(issue => web3.utils.hexToNum(toHex(issue.repoId))) */\n    const issueNumbers = selectedIssues.map(issue => issue.number)\n    const emptyIntArray = new Array(selectedIssues.length).fill(0)\n    const emptyAddrArray = [\n      '0xb4124cEB3451635DAcedd11767f004d8a28c6eE7',\n      '0xd00cc82a132f421bA6414D196BC830Db95e2e7Dd',\n      '0x89c199302bd4ebAfAa0B5Ee1Ca7028C202766A7F',\n      '0xd28c35a207c277029ade183b6e910e8d85206c07',\n      '0xee6bd04c6164d7f0fa1cb03277c855639d99a7f6',\n      '0xb1d048b756f7d432b42041715418b48e414c8f50',\n      '0x6945b970fa107663378d242de245a48c079a8bf6',\n      '0x83ac654be75487b9cfcc80117cdfb4a4c70b68a1',\n      '0x690a63d7023780ccbdeed33ef1ee62c55c47460d',\n      '0xb1afc07af31795d61471c169ecc64ad5776fa5a1',\n      '0x4aafed050dc1cf7e349accb7c2d768fd029ece62',\n      '0xd7a5846dea118aa76f0001011e9dc91a8952bf19',\n    ]\n\n    api.curateIssues(\n      emptyAddrArray.slice(0, selectedIssues.length),\n      emptyIntArray,\n      issueDescriptionIndices,\n      issueDescriptions,\n      description,\n      emptyIntArray,\n      issueNumbers,\n      1\n    ).toPromise()\n  }\n\n  return (\n    <div css={`margin: ${2 * GU}px 0`}>\n      <Form onSubmit={submitCuration} submitText=\"Submit Curation\">\n        <FormField\n          required\n          label=\"Description\"\n          input={\n            <TextInput.Multiline\n              name=\"description\"\n              value={description}\n              onChange={updateDescription}\n              placeholder=\"Describe what this curation represents.\"\n              wide\n            />\n          }\n        />\n        <FormField\n          label=\"Issues\"\n          required\n          input={\n            <DropDownOptionsInput\n              name=\"issues\"\n              placeholder=\"Select option...\"\n              onChange={updateIssues}\n              values={selectedIssues}\n              input={issues}\n              allOptions={allIssues}\n            />\n          }\n        />\n      </Form>\n    </div>\n  )\n}\n\nNewIssueCuration.propTypes = {\n  allIssues: PropTypes.arrayOf(issueShape),\n  selectedIssues: PropTypes.arrayOf(issueShape),\n}\n\nexport default NewIssueCuration\n","/* eslint-disable import/no-unused-modules */\nexport { default } from './NewIssueCuration'\n"]}