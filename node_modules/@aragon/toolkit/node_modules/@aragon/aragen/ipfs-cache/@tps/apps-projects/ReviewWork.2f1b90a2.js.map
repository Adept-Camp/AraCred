{"version":3,"sources":["utils/work-ratings.js","components/Panel/ReviewWork/ReviewWork.js","components/Panel/ReviewWork/index.js"],"names":["workRatings","ReviewWork","issue","submissionIndex","readOnly","githubCurrentUser","api","reviewSubmission","closePanel","theme","feedback","setFeedback","rating","setRating","index","setIndex","onReviewSubmission","data","accepted","today","Date","user","reviewDate","toISOString","buildReturnData","ipfsData","workSubmissions","length","requestIPFSHash","review","total","BN","balance","fulfillers","work","fulfillmentAmounts","map","div","toString","repoId","number","toPromise","submitter","submissionDateDistance","submissionDate","submitterName","name","login","GU","submission","background","border","proof","comments","hours","e","target","value","canSubmit","propTypes","issueShape","PropTypes","bool","isRequired"],"mappings":"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","file":"ReviewWork.2f1b90a2.js","sourceRoot":"../app","sourcesContent":["const workRatings = [\n  'Select a Rating',\n  '1 - Unusable',\n  '2 - Needs Rework',\n  '3 - Acceptable',\n  '4 - Exceeds Expectations',\n  '5 - Excellent',\n]\n\nexport default workRatings","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { formatDistance } from 'date-fns'\nimport { BN } from 'web3-utils'\n\nimport {\n  DropDown,\n  GU,\n  Text,\n  TextInput,\n  useTheme,\n} from '@aragon/ui'\n\nimport { FormField, FieldTitle } from '../../Form'\nimport useGithubAuth from '../../../hooks/useGithubAuth'\nimport { useAragonApi } from '../../../api-react'\nimport { usePanelManagement } from '../../Panel'\nimport { ipfsAdd } from '../../../utils/ipfs-helpers'\nimport { toHex } from 'web3-utils'\nimport { issueShape } from '../../../utils/shapes.js'\nimport {\n  Avatar,\n  FieldText,\n  IssueTitle,\n  ReviewButtons,\n  Status,\n  SubmissionDetails,\n  UserLink,\n} from '../PanelComponents'\nimport workRatings from '../../../utils/work-ratings.js'\nimport { DetailHyperText } from '../../../../../../shared/ui'\n\nconst ReviewWork = ({ issue, submissionIndex, readOnly }) => {\n  const githubCurrentUser = useGithubAuth()\n  const {\n    api: { reviewSubmission },\n  } = useAragonApi()\n  const { closePanel } = usePanelManagement()\n  const theme = useTheme()\n\n  const [ feedback, setFeedback ] = useState('')\n  const [ rating, setRating ] = useState(-1)\n  const [ index, setIndex ] = useState(submissionIndex)\n\n  const buildReturnData = accepted => {\n    const today = new Date()\n    return {\n      feedback,\n      rating,\n      accepted,\n      user: githubCurrentUser,\n      reviewDate: today.toISOString(),\n    }\n  }\n\n  const onAccept = () => onReviewSubmission(true)\n  const onReject = () => onReviewSubmission(false)\n  const updateRating = (index) => setRating(index)\n  const updateFeedback = e => setFeedback(e.target.value)\n  const changeSubmission = (index) => setIndex(index)\n\n  const canSubmit = () => !(rating > 0)\n\n  const onReviewSubmission = async accepted => {\n    const data = buildReturnData(accepted)\n\n    // new IPFS data is old data plus state returned from the panel\n    const ipfsData = issue.workSubmissions[issue.workSubmissions.length - 1]\n    const requestIPFSHash = await ipfsAdd({ ...ipfsData, review: data })\n\n    const total = new BN(issue.data.balance, 10)\n    const fulfillers = issue.data.work.fulfillers\n    const fulfillmentAmounts = fulfillers.map(() =>\n      total.div(new BN(fulfillers.length, 10)).toString()\n    )\n\n    closePanel()\n\n    reviewSubmission(\n      toHex(issue.repoId),\n      issue.number,\n      issue.workSubmissions.length - 1,\n      accepted,\n      requestIPFSHash,\n      fulfillmentAmounts\n    ).toPromise()\n  }\n\n  const work = issue.workSubmissions[index]\n  const submitter = issue.work.user\n  const submissionDateDistance = formatDistance(new Date(work.submissionDate), new Date())\n  const submitterName = submitter.name ? submitter.name : submitter.login\n\n  return(\n    <div css={`margin: ${2 * GU}px 0`}>\n      <IssueTitle issue={issue} />\n\n      <FieldTitle>Work Submissions</FieldTitle>\n      <DropDown\n        name=\"Submission\"\n        items={issue.workSubmissions.map(submission => submission.user.login)}\n        onChange={changeSubmission}\n        selected={index}\n        wide\n        css={`margin-bottom: ${3 * GU}px`}\n      />\n\n      <SubmissionDetails background={`${theme.background}`} border={`${theme.border}`}>\n        <UserLink>\n          <Avatar user={submitter} />\n          {submitterName} submitted work {submissionDateDistance} ago\n        </UserLink>\n\n        <FieldTitle>Submission</FieldTitle>\n        <DetailHyperText>{work.proof}</DetailHyperText>\n\n        {work.comments && (\n          <>\n            <FieldTitle>Additional Comments</FieldTitle>\n            <DetailHyperText>{work.comments}</DetailHyperText>\n          </>\n        )}\n\n        <FieldTitle>Hours Worked</FieldTitle>\n        <Text>{work.hours}</Text>\n      </SubmissionDetails>\n\n      {('review' in work) && (\n        <React.Fragment>\n          <FieldTitle>Submission Status</FieldTitle>\n          <FieldText>\n            <Status reviewDate={work.review.reviewDate} approved={work.review.accepted} />\n          </FieldText>\n\n          <FieldTitle>Feedback</FieldTitle>\n          <FieldText>\n            <Text.Block>\n              {work.review.feedback.length ? work.review.feedback : 'No feedback was provided'}\n            </Text.Block>\n          </FieldText>\n\n          <FieldTitle>Quality Rating</FieldTitle>\n          <FieldText>\n            <Text.Block>\n              {workRatings[work.review.rating]}\n            </Text.Block>\n          </FieldText>\n        </React.Fragment>\n      )}\n      {!readOnly && !work.review && (\n        <React.Fragment>\n          <FormField\n            label=\"Quality Rating\"\n            required\n            input={\n              <DropDown\n                placeholder=\"Select rating\"\n                items={workRatings}\n                onChange={updateRating}\n                selected={rating}\n                wide\n              />\n            }\n          />\n\n          <FormField\n            label=\"Feedback\"\n            input={\n              <TextInput.Multiline\n                name=\"feedback\"\n                rows=\"3\"\n                onChange={updateFeedback}\n                value={feedback}\n                placeholder=\"Do you have any feedback to provide the contributor?\"\n                wide\n              />\n            }\n          />\n\n          <ReviewButtons onAccept={onAccept} onReject={onReject} disabled={canSubmit()} />\n\n        </React.Fragment>\n      )}\n\n    </div>\n  )\n}\n\nReviewWork.propTypes = {\n  issue: issueShape,\n  readOnly: PropTypes.bool.isRequired,\n  submissionIndex: PropTypes.number.isRequired,\n}\n\nexport default ReviewWork\n","/* eslint-disable import/no-unused-modules */\nexport { default } from './ReviewWork'\n"]}