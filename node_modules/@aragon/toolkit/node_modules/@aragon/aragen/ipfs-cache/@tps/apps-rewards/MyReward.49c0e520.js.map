{"version":3,"sources":["components/Panel/MyReward/MyReward.js","components/Panel/MyReward/index.js"],"names":["MyReward","React","Component","props","onClosePanel","onClaimReward","reward","e","viewReward","preventDefault","date","Intl","DateTimeFormat","format","render","rewardId","isMerit","referenceTokenSymbol","startDate","endDate","delay","claimed","userRewardAmount","onViewOrigin","textDecoration","color","marginBottom","formatDate","Date","now","PropTypes","func","isRequired","object","Part","styled","div","Summary","SummaryBold","span","TokenIcon","IconFundraising"],"mappings":"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","file":"MyReward.49c0e520.js","sourceRoot":"../app","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { provideNetwork } from '../../../../../../shared/ui'\nimport { blocksToMilliseconds } from '../../../../../../shared/ui/utils'\n\nimport {\n  Button,\n  Field,\n  IconCheck,\n  IconFundraising,\n  IconTime,\n  Info,\n  SafeLink,\n  SidePanelSplit,\n  Text,\n} from '@aragon/ui'\n\nimport { displayCurrency } from '../../../utils/helpers'\n\nclass MyReward extends React.Component {\n  static propTypes = {\n    onClaimReward: PropTypes.func.isRequired,\n    onClosePanel: PropTypes.func.isRequired,\n    viewReward: PropTypes.func.isRequired,\n    reward: PropTypes.object.isRequired,\n  }\n\n  onClosePanel = () => this.props.onClosePanel()\n\n  onClaimReward = () => this.props.onClaimReward(this.props.reward)\n\n  onViewOrigin = e => {\n    this.props.viewReward(this.props.reward)\n    e.preventDefault()\n  }\n\n  formatDate = date => Intl.DateTimeFormat().format(date)\n\n  render() {\n    const {\n      rewardId,\n      isMerit,\n      referenceTokenSymbol,\n      startDate,\n      endDate,\n      delay,\n      claimed,\n      userRewardAmount\n    } = this.props.reward\n\n    return (\n      <div>\n        <SidePanelSplit>\n          <Field label={'Origin'} >\n            <SafeLink\n              href=\"#\"\n              onClick={this.onViewOrigin}\n              style={{ textDecoration: 'none', color: '#21AAE7' }}\n            >\n            Reward #{rewardId}\n            </SafeLink>\n          </Field>\n          <Field label={'Status'} >\n            {claimed ? (\n              <div>\n                <IconCheck /> Claimed\n              </div>\n            ) : (\n              <div style={{ color: '#D2C558' }}>\n                <IconTime foreground=\"#D2C558\" /> Unclaimed\n              </div>\n            )}\n          </Field>\n        </SidePanelSplit>\n        <Part>\n          <Text size='large' weight='bold' >Reward Summary</Text>\n        </Part>\n        <Info style={{ marginBottom: '10px' }}>\n          <TokenIcon />\n          <Summary>\n            {isMerit === true ? (\n              <p>\n                You have been granted a one-time <SummaryBold>{displayCurrency(userRewardAmount)} {referenceTokenSymbol}</SummaryBold> reward, based on the <SummaryBold>{referenceTokenSymbol}</SummaryBold> you earned from <SummaryBold>{this.formatDate(startDate)}</SummaryBold> to <SummaryBold>{this.formatDate(endDate)}</SummaryBold>.\n              </p>\n            ) : (\n              <p>\n              A dividend, currently worth <SummaryBold>{displayCurrency(userRewardAmount)} {referenceTokenSymbol}</SummaryBold>, will be distributed to you based on your holdings of <SummaryBold>{referenceTokenSymbol}</SummaryBold> on <SummaryBold>{this.formatDate(endDate)}</SummaryBold>.\n              You will be able to claim it after <SummaryBold>{this.formatDate(endDate + blocksToMilliseconds(0,delay))}</SummaryBold>.\n              </p>\n            )}\n            <p>\n              {'For more details, refer to the origin, '}\n              <SafeLink\n                href=\"#\"\n                onClick={this.onViewOrigin}\n                style={{ textDecoration: 'none', color: '#21AAE7' }}\n              >\n                Reward #{rewardId}\n              </SafeLink>\n            </p>\n          </Summary>\n        </Info>\n\n        {claimed ? (\n          <Button mode=\"strong\" wide onClick={this.onClosePanel}>Close</Button>\n        ) : (\n          Date.now() > endDate ?\n            <Button mode=\"strong\" wide onClick={this.onClaimReward}>Claim Reward</Button>\n            : null\n        )}\n      </div>\n    )\n  }\n}\n\nconst Part = styled.div`\n  padding: 20px 0;\n  h2 {\n    margin-top: 20px;\n    &:first-child {\n      margin-top: 0;\n    }\n  }\n`\n\nconst Summary = styled.div`\n  padding-bottom: 2px;\n  padding-left: 35px;\n  > :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`\nconst SummaryBold = styled.span`\n  font-weight: bold;\n  text-decoration: underline;\n`\nconst TokenIcon = styled(IconFundraising)`\n  float: left;\n`\nexport default provideNetwork(MyReward)\n","// eslint-disable-next-line import/no-unused-modules\nexport { default } from './MyReward'\n"]}