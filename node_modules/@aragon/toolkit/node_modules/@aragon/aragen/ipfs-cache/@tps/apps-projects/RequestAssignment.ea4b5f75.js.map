{"version":3,"sources":["components/Panel/RequestAssignment/RequestAssignment.js","components/Panel/RequestAssignment/index.js"],"names":["RequestAssignment","issue","githubCurrentUser","api","theme","closePanel","workplan","setWorkplan","hours","setHours","eta","setEta","Date","ack1","setAck1","ack2","setAck2","GU","today","data","user","applicationDate","toISOString","hash","requestAssignment","repoId","number","toPromise","canSubmit","e","target","value","surfaceContentSecondary","propTypes","issueShape","HoursInput","TextInput","Number","attrs","step","min","Estimations","styled","div","AckText","Text","AckRow"],"mappings":"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","file":"RequestAssignment.ea4b5f75.js","sourceRoot":"../app","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport { Checkbox, Text, TextInput, GU, useTheme } from '@aragon/ui'\n\nimport { Form, FormField, DateInput } from '../../Form'\nimport { useAragonApi } from '../../../api-react'\nimport useGithubAuth from '../../../hooks/useGithubAuth'\nimport { usePanelManagement } from '..'\nimport { ipfsAdd } from '../../../utils/ipfs-helpers'\nimport { toHex } from 'web3-utils'\nimport { issueShape } from '../../../utils/shapes.js'\nimport { IssueTitle } from '../PanelComponents'\n\nconst RequestAssignment = ({ issue }) => {\n  const githubCurrentUser = useGithubAuth()\n  const { api } = useAragonApi()\n  const theme = useTheme()\n\n  const { closePanel } = usePanelManagement()\n  const [ workplan, setWorkplan ] = useState('')\n  const [ hours, setHours ] = useState(0)\n  const [ eta, setEta ] = useState(new Date())\n  const [ ack1, setAck1 ] = useState(false)\n  const [ ack2, setAck2 ] = useState(false)\n\n  const updateWorkplan = e => setWorkplan(e.target.value)\n  const updateHours = e => setHours(e.target.value)\n  const updateEta = eta => setEta(eta)\n  const toggleAck1 = () => setAck1(!ack1)\n  const toggleAck2 = () => setAck2(!ack2)\n\n  const onRequestAssignment = async () => {\n    closePanel()\n\n    const today = new Date()\n    //If user hasn't set values, we display them as '-'\n    const date = (eta <= today) ? '-' : eta\n    const time = (hours === '' || hours === 0) ? '-' : hours\n\n    const data = {\n      workplan,\n      hours: time,\n      eta: date,\n      ack1,\n      ack2,\n      user: githubCurrentUser,\n      applicationDate: today.toISOString(),\n    }\n    const hash = await ipfsAdd(data)\n    api.requestAssignment(toHex(issue.repoId), issue.number, hash).toPromise()\n  }\n\n  const canSubmit = () => !(ack1 && ack2 && workplan)\n\n  return (\n    <div css={`margin: ${2 * GU}px 0`}>\n      <Form\n        onSubmit={onRequestAssignment}\n        submitText=\"Submit application\"\n        noSeparator\n        submitDisabled={canSubmit()}\n      >\n        <IssueTitle issue={issue} />\n\n        <FormField\n          label=\"Work Plan\"\n          required\n          input={\n            <TextInput.Multiline\n              value={workplan}\n              name=\"workplan\"\n              rows=\"3\"\n              onChange={updateWorkplan}\n              placeholder=\"Describe how you plan to accomplish the task and any questions you may have.\"\n              wide\n            />\n          }\n        />\n\n        <Estimations>\n          <FormField\n            label=\"Estimated Hours\"\n            input={\n              <HoursInput\n                name=\"hours\"\n                value={hours}\n                onChange={updateHours}\n                wide\n              />\n            }\n          />\n          <FormField\n            label=\"Estimated Completion\"\n            input={\n              <DateInput\n                name=\"eta\"\n                value={eta}\n                onChange={updateEta}\n                width=\"100%\"\n              />\n            }\n          />\n        </Estimations>\n\n        <AckRow>\n          <div css=\"width: 23px\">\n            <Checkbox checked={ack1} onChange={toggleAck1} />\n          </div>\n          <AckText color={`${theme.surfaceContentSecondary}`}>\n            I understand that this is an application and I should wait for\n            approval before starting work.\n          </AckText>\n        </AckRow>\n\n        <AckRow>\n          <div css=\"width: 23px\">\n            <Checkbox checked={ack2} onChange={toggleAck2} />\n          </div>\n          <AckText color={`${theme.surfaceContentSecondary}`}>\n              I agree to keep the organization informed of my progress every few days.\n          </AckText>\n        </AckRow>\n      </Form>\n    </div>\n  )\n}\n\nRequestAssignment.propTypes = issueShape\n\nconst HoursInput = styled(TextInput.Number).attrs({\n  step: '0.25',\n  min: '0',\n})`\n  width: 100%;\n  display: inline-block;\n  padding-top: 3px;\n`\n\nconst Estimations = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: auto;\n  grid-gap: 12px;\n`\nconst AckText = styled(Text)`\n  margin-left: ${GU}px;\n`\nconst AckRow = styled.div`\n  display: flex;\n  margin: ${2 * GU}px 0;\n`\nexport default RequestAssignment\n","/* eslint-disable import/no-unused-modules */\nexport { default } from './RequestAssignment'\n"]}