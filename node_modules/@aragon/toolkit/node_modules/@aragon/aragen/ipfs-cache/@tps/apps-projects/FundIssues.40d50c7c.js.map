{"version":3,"sources":["components/Panel/FundIssues/styled.js","components/Panel/FundIssues/EditBounty.js","components/Panel/FundIssues/FundIssues.js","components/Panel/FundIssues/index.js"],"names":["HorizontalInputGroup","styled","div","AmountInput","TextInput","Number","attrs","step","min","autoComplete","TokenInput","DropDown","HoursInput","IssueAmount","span","TextTag","Text","size","weight","props","theme","tagIndicatorContent","tagIndicator","IssueTitleCompact","title","tag","propTypes","PropTypes","string","isRequired","EditBounty","DetailsArrow","Deadline","p","background","border","GU","detailsOpen","bounty","issue","onFocus","tokens","updateBounty","setDetailsOpen","appState","bountySettings","id","hours","payout","dp","token","symbol","fundingModel","e","target","value","map","t","indexOf","i","expLvls","exp","name","index","deadline","object","issueShape","func","array","FundIssues","ETHER_TOKEN_FAKE_ADDRESS","errorMessages","amount","sayAmount","plural","date","total","inVault","sayTotal","bountiesFor","issues","reduce","bounties","fundingHistory","issueId","repo","number","repoId","parseFloat","Date","bountyDeadline","slots","slotsIndex","find","BountyUpdate","submitBounties","submitting","description","submitDisabled","setSubmitDisabled","maxError","setMaxError","zeroError","setZeroError","dateError","setDateError","expLevels","today","maxErr","times","decimals","gt","balance","zeroErr","dateErr","bool","FundForm","descriptionChange","openSubmission","setOpenSubmission","maxErrors","setMaxErrors","validate","setValidate","errors","bountiesForToken","Object","values","filter","b","sum","plus","push","toString","length","zeroErrArray","dateErrArray","forEach","resize","arrayOf","mode","githubCurrentUser","api","closePanel","setSubmitting","setDescription","addr","bountyCurrency","bountylessIssues","hasBounty","alreadyAdded","setBounties","fundsAvailable","update","newBounties","undefined","baseRate","mul","preventDefault","repoIds","issueNumbers","bountySizes","deadlines","tokenTypes","tokenContracts","ipfsData","getTime","user","toISOString","ipfsAddresses","addBountiesF","addBountiesNoAssignment","addBounties","toPromise","NoFunds","marginBottom","margin","oneOf","UpdateRow","WarningIssueList","ul","InfoPanel","imgSrc","message","contentSecondary","ErrorText","X","IconClose","negative","ErrorMessage","text"],"mappings":"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","file":"FundIssues.40d50c7c.js","sourceRoot":"../app","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport {\n  Text,\n  TextInput,\n  DropDown,\n  useTheme,\n} from '@aragon/ui'\nimport { IssueText } from '../PanelComponents'\n\nexport const HorizontalInputGroup = styled.div`\n  display: flex;\n`\n\nexport const AmountInput = styled(TextInput.Number).attrs({\n  step: 'any',\n  min: '1e-18',\n  autoComplete: 'off',\n})`\n  width: 100%;\n  display: inline-block;\n  padding-top: 3px;\n  border-radius: 4px 0 0 4px;\n`\n\nexport const TokenInput = styled(DropDown)`\n  border-radius: 0 4px 4px 0;\n  left: -1px;\n  min-width: auto;\n  max-width: 120px;\n`\n\nexport const HoursInput = styled(TextInput.Number).attrs({\n  step: '0.25',\n  min: '0',\n})`\n  width: 100%;\n  display: inline-block;\n  padding-top: 3px;\n`\n\nconst IssueAmount = styled.span`\n  display: flex;\n`\nconst TextTag = styled(Text).attrs({\n  size: 'small',\n  weight:'bold',\n})`\n  padding: 0 10px;\n  margin-left: 10px;\n  white-space: nowrap;\n  width: auto;\n  height: 24px;\n  line-height: 28px;\n  border-radius: 24px;\n  text-transform: uppercase;\n  color: ${props => props.theme.tagIndicatorContent};\n  background: ${props => props.theme.tagIndicator};\n`\n\nexport const IssueTitleCompact = ({ title, tag = '' }) => {\n  const theme = useTheme()\n\n  return (\n    <React.Fragment>\n      <IssueText>\n        <Text >{title}</Text>\n      </IssueText>\n      {tag && (\n        <IssueAmount>\n          <TextTag theme={theme}>\n            {tag}\n          </TextTag>\n        </IssueAmount>\n      )}\n    </React.Fragment>\n  )\n}\n\nIssueTitleCompact.propTypes = {\n  title: PropTypes.string.isRequired,\n  tag: PropTypes.string,\n}\n\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useAragonApi } from '../../../api-react'\nimport { issueShape } from '../../../utils/shapes.js'\nimport { IconOpen, IconCollapse } from '../../../assets'\nimport { Box, DropDown, GU, useTheme } from '@aragon/ui'\nimport { FormField, FieldTitle, DateInput } from '../../Form'\nimport {\n  AmountInput,\n  HorizontalInputGroup,\n  HoursInput,\n  IssueTitleCompact,\n  TokenInput,\n} from './styled'\n\nconst DetailsArrow = styled.div`\n  width: 24px;\n  margin-right: 12px;\n`\n\nconst Deadline = styled.div`\n  grid-area: deadline;\n  background: ${p => p.theme.background};\n  border-top: 1px solid ${p => p.theme.border};\n  padding: 0 ${2 * GU}px;\n  display: ${p => p.detailsOpen ? 'block' : 'none'};\n`\n\nconst EditBounty = ({\n  bounty,\n  issue,\n  onFocus,\n  tokens,\n  updateBounty,\n}) => {\n  const theme = useTheme()\n  const [ detailsOpen, setDetailsOpen ] = useState(false)\n  const { appState: { bountySettings } } = useAragonApi()\n\n  return (\n    <Box key={issue.id} padding={0}>\n      <div css={`\n        padding: ${2 * GU}px;\n        display: flex;\n      `}>\n        <DetailsArrow onClick={() => setDetailsOpen(!detailsOpen)}>\n          {detailsOpen ? <IconCollapse /> : <IconOpen />}\n        </DetailsArrow>\n        <IssueTitleCompact\n          title={issue.title}\n          tag={bounty && bounty.hours > 0\n            ? BigNumber(bounty.payout).dp(2) + ' ' + bounty.token.symbol\n            : ''\n          }\n        />\n      </div>\n      <div css={`\n              display: grid;\n              grid-template-columns: calc(55% - ${GU}px) calc(45% - ${GU}px);\n              grid-template-rows: auto;\n              grid-template-areas:\n                \"hours exp\"\n                \"deadline deadline\";\n              grid-gap: 12px;\n              align-items: stretch;\n            `}>\n\n        {bountySettings.fundingModel === 'Fixed' ? (\n          <div css={`grid-area: hours; padding-left: ${2 * GU}px`}>\n            <FieldTitle>Amount</FieldTitle>\n            <HorizontalInputGroup>\n              <AmountInput\n                name=\"amount\"\n                value={bounty.payout}\n                onFocus={onFocus}\n                onChange={e => updateBounty({ payout: e.target.value })}\n                wide\n              />\n              <TokenInput\n                name=\"token\"\n                items={tokens.map(t => t.symbol)}\n                selected={tokens.indexOf(bounty.token)}\n                onChange={i => updateBounty({ token: tokens[i] })}\n              />\n            </HorizontalInputGroup>\n          </div>\n        ) : (\n          <div css={`grid-area: hours; padding-left: ${2 * GU}px`}>\n            <FieldTitle>Estimated Hours</FieldTitle>\n            <HoursInput\n              name=\"hours\"\n              value={bounty.hours}\n              onFocus={onFocus}\n              onChange={e => updateBounty({ hours: e.target.value })}\n              wide\n            />\n          </div>\n        )}\n\n        <div css={`grid-area: exp; padding-right: ${2 * GU}px; width: 100%;`}>\n          <FormField\n            label=\"Experience level\"\n            input={\n              <DropDown\n                items={bountySettings.expLvls.map(exp => exp.name)}\n                onChange={index => updateBounty({ exp: index })}\n                selected={bounty.exp}\n                wide\n              />\n            }\n          />\n        </div>\n\n        <Deadline theme={theme} detailsOpen={detailsOpen}>\n          <FormField\n            label=\"Deadline\"\n            input={\n              <DateInput\n                name='deadline'\n                value={bounty.deadline}\n                onChange={deadline => updateBounty({ deadline })}\n                width=\"100%\"\n              />\n            }\n          />\n        </Deadline>\n      </div>\n    </Box>\n  )\n}\n\nEditBounty.propTypes = {\n  bounty: PropTypes.object,\n  issue: issueShape,\n  onFocus: PropTypes.func,\n  tokens: PropTypes.array.isRequired,\n  updateBounty: PropTypes.func.isRequired,\n}\n\nexport default EditBounty\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { addHours } from 'date-fns'\nimport BigNumber from 'bignumber.js'\nimport { useAragonApi } from '../../../api-react'\nimport useGithubAuth from '../../../hooks/useGithubAuth'\nimport { usePanelManagement } from '..'\nimport { computeIpfsString } from '../../../utils/ipfs-helpers'\nimport { toHex } from 'web3-utils'\nimport { IconClose } from '@aragon/ui'\nimport NoFunds from '../../../assets/noFunds.svg'\nimport {\n  Button,\n  DropDown,\n  GU,\n  Help,\n  Info,\n  LoadingRing,\n  Switch,\n  Text,\n  TextInput,\n  useTheme,\n} from '@aragon/ui'\n\nimport { Form, FormField, DateInput } from '../../Form'\nimport { issueShape } from '../../../utils/shapes.js'\nimport EditBounty from './EditBounty'\nimport {\n  AmountInput,\n  HorizontalInputGroup,\n  HoursInput,\n  IssueTitleCompact,\n  TokenInput,\n} from './styled'\n\nconst ETHER_TOKEN_FAKE_ADDRESS = '0x0000000000000000000000000000000000000000'\n\nconst errorMessages = {\n  amount: ({ sayAmount, plural }) =>\n    (sayAmount ? `Funding amount${plural ? 's' : ''}` : 'Estimated hours') +\n    ' must be greater than zero',\n  date: () => 'The deadline cannot be in the past',\n  total: ({ inVault, sayTotal, symbol, total }) =>\n    `The ${sayTotal ? 'total' : ''} funding amount of ${total} ${symbol} ` +\n    `exceeds the available funds in the vault (${inVault} ${symbol}).`\n}\n\nconst bountiesFor = ({ bountySettings, issues, tokens }) => issues.reduce(\n  (bounties, issue) => {\n    bounties[issue.id] = {\n      fundingHistory: issue.fundingHistory || [],\n      issueId: issue.id,\n      repo: issue.repo,\n      number: issue.number,\n      repoId: issue.repoId,\n      hours: issue.hours ? parseFloat(issue.hours) : '',\n      exp: issue.exp || 0,\n      deadline: issue.deadline\n        ?  new Date(issue.deadline)\n        : addHours(new Date(), bountySettings.bountyDeadline),\n      slots: 1,\n      slotsIndex: 0,\n      payout: issue.payout || 0,\n      token: tokens.find(t => t.symbol === issue.symbol) || tokens[0],\n    }\n    return bounties\n  },\n  {}\n)\n\nconst BountyUpdate = ({\n  issue,\n  bounty,\n  submitBounties,\n  submitting,\n  description,\n  tokens,\n  updateBounty,\n}) => {\n  const { appState: { bountySettings } } = useAragonApi()\n  const [ submitDisabled, setSubmitDisabled ] = useState(false)\n  const [ maxError, setMaxError ] = useState(false)\n  const [ zeroError, setZeroError ] = useState(false)\n  const [ dateError, setDateError ] = useState(false)\n\n  const expLevels = bountySettings.expLvls\n\n  useEffect(() => {\n    const today = new Date()\n    const maxErr = BigNumber(bounty.payout)\n      .times(10 ** bounty.decimals)\n      .gt(BigNumber(bounty.balance))\n    const zeroErr = bounty.payout === 0\n    const dateErr = today > bounty.deadline\n    setMaxError(maxErr)\n    setZeroError(zeroErr)\n    setDateError(dateErr)\n    setSubmitDisabled( maxErr || zeroErr || dateErr )\n  }, [bounty])\n\n  return (\n    <>\n      <Form\n        css={`margin: ${2 * GU}px 0`}\n        onSubmit={submitBounties}\n        description={description}\n        submitText={submitting\n          ? <><LoadingRing /> Saving...</>\n          : 'Submit'\n        }\n        submitDisabled={submitDisabled || submitting}\n      >\n        <FormField\n          input={\n            <React.Fragment>\n              <div css={`\n                padding: ${2 * GU}px 0;\n                display: flex;\n              `}>\n                <IssueTitleCompact\n                  title={issue.title}\n                  tag={bounty && bounty.hours > 0\n                    ? BigNumber(bounty.payout).dp(2) + ' ' + bounty.symbol\n                    : ''\n                  }\n                />\n              </div>\n\n              <UpdateRow>\n                { bountySettings.fundingModel === 'Fixed' ? (\n                  <FormField\n                    label=\"Amount\"\n                    input={\n                      <HorizontalInputGroup>\n                        <AmountInput\n                          name=\"amount\"\n                          value={bounty.payout}\n                          onChange={e => updateBounty({ payout: e.target.value })}\n                          wide\n                        />\n                        <TokenInput\n                          name=\"token\"\n                          items={tokens.map(t => t.symbol)}\n                          selected={tokens.indexOf(bounty.token)}\n                          onChange={i => updateBounty({ token: tokens[i] })}\n                        />\n                      </HorizontalInputGroup>\n                    }\n                  />\n                ) : (\n                  <FormField\n                    label=\"Estimated Hours\"\n                    input={\n                      <HoursInput\n                        width=\"100%\"\n                        name=\"hours\"\n                        value={bounty.hours}\n                        onChange={e => updateBounty({\n                          hours: e.target.value && parseFloat(e.target.value)\n                        })}\n                      />\n                    }\n                  />\n                )}\n\n                <FormField\n                  label=\"Difficulty\"\n                  input={\n                    <DropDown\n                      items={expLevels.map(exp => exp.name)}\n                      onChange={index => updateBounty({ exp: index })}\n                      selected={bounty.exp}\n                      wide\n                    />\n                  }\n                />\n              </UpdateRow>\n\n              <div css={`\n                width: 100%;\n                margin-bottom: ${3 * GU}px;\n              `}>\n                <FormField\n                  label=\"Deadline\"\n                  input={\n                    <DateInput\n                      name='deadline'\n                      value={bounty.deadline}\n                      onChange={deadline => updateBounty({ deadline })}\n                      width=\"100%\"\n                    />\n                  }\n                />\n              </div>\n            </React.Fragment>\n          }\n        />\n      </Form>\n      {maxError && <ErrorMessage text={errorMessages.total()} />}\n      {zeroError &&\n        <ErrorMessage text={\n          errorMessages.amount({\n            sayAmount: bountySettings.fundingModel === 'Fixed',\n            plural: false,\n          })}\n        />\n      }\n      {dateError && <ErrorMessage text={errorMessages.date()} />}\n    </>\n  )\n}\nBountyUpdate.propTypes = {\n  issue: issueShape,\n  bounty: PropTypes.object.isRequired,\n  submitBounties: PropTypes.func.isRequired,\n  submitting: PropTypes.bool.isRequired,\n  description: PropTypes.string.isRequired,\n  tokens: PropTypes.array.isRequired,\n  updateBounty: PropTypes.func.isRequired,\n}\n\nconst FundForm = ({\n  issues,\n  bounties,\n  submitting,\n  submitBounties,\n  description,\n  tokens,\n  descriptionChange,\n  updateBounty,\n  openSubmission,\n  setOpenSubmission,\n}) => {\n  const { appState: { bountySettings } } = useAragonApi()\n  const [ submitDisabled, setSubmitDisabled ] = useState(true)\n  const [ maxErrors, setMaxErrors ] = useState([])\n  const [ zeroError, setZeroError ] = useState([])\n  const [ dateError, setDateError ] = useState([])\n  const [ validate, setValidate ] = useState(false)\n\n  useEffect(() => {\n    setMaxErrors(tokens.reduce(\n      (errors, token) => {\n        const inVault = BigNumber(token.balance)\n        const bountiesForToken = Object.values(bounties)\n          .filter(b => b.token.symbol === token.symbol)\n        const total = bountiesForToken.reduce(\n          (sum, b) => sum.plus(BigNumber(b.payout || 0).times(10 ** token.decimals)),\n          BigNumber(0)\n        )\n        if (total.gt(inVault)) {\n          errors.push({\n            inVault: inVault.div(10 ** token.decimals).dp(4).toString(),\n            symbol: token.symbol,\n            total: total.div(10 ** token.decimals).dp(4).toString(),\n            sayTotal: bountiesForToken.length > 1,\n          })\n        }\n        return errors\n      },\n      []\n    ))\n  }, [ tokens, bounties ])\n\n  useEffect(() => {\n    if (!validate) return\n    const today = new Date()\n    const zeroErrArray = []\n    const dateErrArray = []\n    Object.values(bounties).forEach(bounty => {\n      if (!bounty.payout || bounty.payout === '0') zeroErrArray.push(bounty.issueId)\n      if (today > bounty.deadline) dateErrArray.push(bounty.issueId)\n    })\n    setZeroError(zeroErrArray)\n    setDateError(dateErrArray)\n    setSubmitDisabled(\n      description === '' ||\n      !!maxErrors.length ||\n      !!zeroErrArray.length ||\n      !!dateErrArray.length\n    )\n  }, [ bounties, description, maxErrors ])\n\n  return (\n    <>\n      <Form\n        css={`margin: ${2 * GU}px 0`}\n        onSubmit={submitBounties}\n        description={description}\n        submitText={submitting\n          ? <><LoadingRing /> Saving...</>\n          : issues.length > 1 ? 'Fund Issues' : 'Fund Issue'\n        }\n        submitDisabled={submitDisabled || submitting}\n      >\n        <FormField\n          label=\"Description\"\n          required\n          input={\n            <TextInput.Multiline\n              rows=\"3\"\n              name=\"description\"\n              style={{ resize: 'none' }}\n              onChange={descriptionChange}\n              value={description}\n              wide\n            />\n          }\n        />\n        <FormField\n          label=\"Work terms\"\n          input={\n            <div css={`\n              display: flex;\n              justify-content: space-between;\n              margin: ${GU}px 0 ${2 * GU}px 0;\n            `}>\n              <Text css=\"display: flex\">\n                Applications required to work on issues&nbsp;\n                <Help hint=\"The work terms\" css={`margin-left: ${.5 * GU}`}>\n                  By default, the issues in this funding proposal will not require\n                  applications to work on a bounty before work is submitted.\n                  To require applications, click on the switch to enable this term.\n                </Help>\n              </Text>\n              <Switch\n                checked={!openSubmission}\n                onChange={() => setOpenSubmission(!openSubmission)}\n              />\n            </div>\n          }\n        />\n\n        <FormField\n          label=\"Issues\"\n          required\n          input={\n            <>\n              <Text css={`display: flex; display: block; margin: ${GU}px 0 ${2 * GU}px 0`}>\n                Enter the estimated hours per issue\n              </Text>\n              <React.Fragment>\n                {issues.map(issue => (\n                  <EditBounty\n                    key={issue.id}\n                    issue={issue}\n                    bounty={bounties[issue.id]}\n                    tokens={tokens}\n                    onFocus={() => setValidate(true)}\n                    updateBounty={updateBounty(issue.id)}\n                  />\n                ))}\n              </React.Fragment>\n            </>\n          }\n        />\n      </Form>\n      {maxErrors.map((maxError, i) => (\n        <ErrorMessage key={i} text={errorMessages.total(maxError)} />\n      ))}\n      {!!zeroError.length &&\n        <ErrorMessage text={\n          errorMessages.amount({\n            sayAmount: bountySettings.fundingModel === 'Fixed',\n            plural: issues.length > 1,\n          })}\n        />\n      }\n      {!!dateError.length && <ErrorMessage text={errorMessages.date()} />}\n    </>\n  )\n}\n\nFundForm.propTypes = {\n  issues: PropTypes.arrayOf(issueShape),\n  bounties: PropTypes.object.isRequired,\n  submitBounties: PropTypes.func.isRequired,\n  submitting: PropTypes.bool.isRequired,\n  description: PropTypes.string.isRequired,\n  tokens: PropTypes.array.isRequired,\n  descriptionChange: PropTypes.func.isRequired,\n  updateBounty: PropTypes.func.isRequired,\n  openSubmission: PropTypes.bool.isRequired,\n  setOpenSubmission: PropTypes.func.isRequired,\n}\n\nconst FundIssues = ({ issues, mode }) => {\n  const githubCurrentUser = useGithubAuth()\n  const { api, appState } = useAragonApi()\n  const { bountySettings } = appState\n  const { closePanel } = usePanelManagement()\n  const [ submitting, setSubmitting ] = useState(false)\n  const [ description, setDescription ] = useState('')\n  const [ openSubmission, setOpenSubmission ] = useState(true)\n  const tokens = useMemo(() => {\n    if (bountySettings.fundingModel === 'Fixed') return appState.tokens\n    return [appState.tokens.find(t => t.addr === bountySettings.bountyCurrency)]\n  }, [bountySettings])\n  const bountylessIssues = useMemo(\n    () => issues.filter(i => !i.hasBounty),\n    [issues]\n  )\n  const alreadyAdded = useMemo(\n    () => issues.filter(i => i.hasBounty),\n    [issues]\n  )\n  const [ bounties, setBounties ] = useState(bountiesFor({\n    bountySettings,\n    issues: bountylessIssues,\n    tokens\n  }))\n\n  const fundsAvailable = useMemo(() => tokens.reduce(\n    (sum, t) => sum.plus(BigNumber(t.balance)),\n    BigNumber(0)\n  ), [ bountySettings.fundingModel, tokens ])\n\n  const descriptionChange = e => setDescription(e.target.value)\n\n  const updateBounty = useCallback(issueId => update => {\n    const newBounties = {\n      ...bounties,\n      [issueId]: {\n        ...bounties[issueId],\n        ...update,\n      }\n    }\n\n    if (update.hours !== undefined || update.exp) {\n      const { exp, hours } = newBounties[issueId]\n      const { baseRate, expLvls } = bountySettings\n      newBounties[issueId].payout = hours * baseRate * expLvls[exp].mul\n    }\n\n    setBounties(newBounties)\n  }, [ bounties, bountySettings ])\n\n  const submitBounties = useCallback(async e => {\n    e.preventDefault()\n\n    setSubmitting(true)\n\n    const repoIds = []\n    const issueNumbers = []\n    const bountySizes = []\n    const deadlines = []\n    const tokenTypes = []\n    const tokenContracts = []\n    const ipfsData = []\n    Object.values(bounties).forEach(bounty => {\n      repoIds.push(toHex(bounty.repoId))\n      issueNumbers.push(bounty.number)\n      tokenContracts.push(bounty.token.addr)\n      tokenTypes.push(bounty.token.addr === ETHER_TOKEN_FAKE_ADDRESS ? 1 : 20)\n      bountySizes.push(\n        BigNumber(bounty.payout).times(10 ** bounty.token.decimals).toString()\n      )\n      deadlines.push(bounty.deadline.getTime())\n      ipfsData.push({\n        issueId: bounty.issueId,\n        exp: bounty.exp,\n        fundingHistory: [\n          ...bounty.fundingHistory,\n          {\n            user: githubCurrentUser,\n            date: new Date().toISOString(),\n            description,\n          },\n        ],\n        hours: bounty.hours,\n        repo: bounty.repo,\n      })\n    })\n    const ipfsAddresses = await computeIpfsString(ipfsData)\n\n    const addBountiesF = openSubmission ? api.addBountiesNoAssignment : api.addBounties\n    await addBountiesF(\n      repoIds,\n      issueNumbers,\n      bountySizes,\n      deadlines,\n      tokenTypes,\n      tokenContracts,\n      ipfsAddresses,\n      description\n    ).toPromise()\n\n    closePanel()\n  }, [ bounties, openSubmission ])\n\n  if (fundsAvailable.toString() === '0') {\n    return (\n      <InfoPanel\n        imgSrc={NoFunds}\n        title=\"No funds found.\"\n        message=\"It seems that your organization has no funds available to fund issues. Navigate to the Finance app to deposit some funds first.\"\n      />\n    )\n  }\n\n  if (mode === 'update') {\n    // in 'update' mode there is only one issue\n    const issue = issues[0]\n    const bounty = bounties[issues[0].id]\n    return (\n      <BountyUpdate\n        issue={issue}\n        bounty={bounty}\n        submitBounties={submitBounties}\n        submitting={submitting}\n        description={description}\n        tokens={tokens}\n        updateBounty={updateBounty(issue.id)}\n      />\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {(bountylessIssues.length > 0) && (\n        <FundForm\n          submitBounties={submitBounties}\n          submitting={submitting}\n          issues={bountylessIssues}\n          bounties={bounties}\n          description={description}\n          tokens={tokens}\n          descriptionChange={descriptionChange}\n          updateBounty={updateBounty}\n          openSubmission={openSubmission}\n          setOpenSubmission={setOpenSubmission}\n        />\n      )}\n      {(alreadyAdded.length > 0) && (\n        <Info.Action title=\"Warning\" style={{ marginBottom: `${2 * GU}px` }}>\n          <p style={{ margin: '10px 0' }}>\n          The following issues already have active bounties, so they have been discarded from this funding proposal:\n          </p>\n          <WarningIssueList>\n            {alreadyAdded.map(issue => <li key={issue.id}>{issue.title}</li>)}\n          </WarningIssueList>\n        </Info.Action>\n      )}\n      {(!bountylessIssues.length) && <Button mode=\"strong\" wide onClick={closePanel}>Close</Button>}\n    </React.Fragment>\n  )\n}\n\nFundIssues.propTypes = {\n  issues: PropTypes.arrayOf(issueShape).isRequired,\n  mode: PropTypes.oneOf([ 'new', 'update' ]).isRequired,\n}\n\nconst UpdateRow = styled.div`\n  display: flex;\n  align-content: stretch;\n  margin-bottom: ${2 * GU};\n  > :first-child {\n    width: 55%;\n    padding-right: 10px;\n  }\n  > :last-child {\n    width: 45%;\n    padding-left: 10px;\n  }\n`\nconst WarningIssueList = styled.ul`\n  padding: 10px 30px;\n  font-size: 13px;\n  > :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`\n\nconst InfoPanel = ({ imgSrc, title, message }) => {\n  const theme = useTheme()\n\n  return (\n    <div css={`text-align: center; padding: ${4 * GU}px`}>\n      <img src={imgSrc} alt='' css={`padding: ${GU}px 0`} />\n      <div css={`padding: ${GU}px 0`}>\n        <Text size='xxlarge'>\n          {title}\n        </Text>\n      </div>\n      <div css={`padding: ${GU}px 0`}>\n        <Text size='medium' color={theme.contentSecondary.toString()}>\n          {message}\n        </Text>\n      </div>\n    </div>\n  )\n}\nInfoPanel.propTypes = {\n  imgSrc: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired,\n}\n\nconst ErrorText = styled.div`\n  font-size: small;\n  display: flex;\n  align-items: center;\n  margin: ${2 * GU}px 0;\n`\n\nconst X = styled(IconClose).attrs({\n  size: 'tiny',\n})`\n  margin-right: 8px;\n  color: ${p => p.theme.negative};\n`\n\nconst ErrorMessage = ({ text }) => {\n  const theme = useTheme()\n  return (\n    <ErrorText>\n      <X theme={theme} />\n      {text}\n    </ErrorText>\n  )\n}\n\nErrorMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n}\n\nexport default FundIssues\n","/* eslint-disable import/no-unused-modules */\nexport { default } from './FundIssues'\n"]}