{"version":3,"sources":["components/Panel/NewProject/NewProject.js","components/Panel/NewProject/index.js"],"names":["NewProject","api","appState","repos","closePanel","filter","setFilter","project","setProject","repoSelected","setRepoSelected","reposAlreadyAdded","map","repo","data","_repo","searchRef","current","focus","filterAlreadyAdded","updateFilter","e","target","value","handleClearSearch","handleNewProject","addRepo","toPromise","onRepoSelected","repoArray","i","node","id","RepoList","visibleRepos","length","noResultsSvg","GU","fontSize","marginBottom","theme","link","propTypes","PropTypes","array","isRequired","GET_REPOSITORIES","console","error","loading","refetch","viewer","reposDownloaded","includes","repositories","edges","nameWithOwner","indexOf","filterByName","title","description","margin","flexShrink","surfaceOpened","JSON","stringify","ScrollableList","styled","div","RepoInfo"],"mappings":"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","file":"NewProject.f6a6bd1b.js","sourceRoot":"../app","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { Button, GU, IconSearch, Info, RadioList, Text, TextInput, theme } from '@aragon/ui'\nimport { GET_REPOSITORIES } from '../../../utils/gql-queries.js'\nimport { LoadingAnimation } from '../../Shared'\nimport { Query } from 'react-apollo'\nimport { useAragonApi } from '../../../api-react'\nimport { usePanelManagement } from '../../Panel'\nimport { toHex } from 'web3-utils'\nimport noResultsSvg from '../../../assets/noResults.svg'\n\n\nconst NewProject = () => {\n  const { api, appState: { repos } } = useAragonApi()\n  const { closePanel } = usePanelManagement()\n  const [ filter, setFilter ] = useState('')\n  const [ project, setProject ] = useState()\n  const [ repoSelected, setRepoSelected ] = useState(-1)\n\n  /*\n    TODO: Review\n    This line below might be breaking RepoList loading sometimes preventing show repos after login\n  */\n\n  const reposAlreadyAdded = (repos || []).map(repo => repo.data._repo)\n  const searchRef = useRef(null)\n\n  /*\n  TODO: move Query out to the store, apply filters here\n  useEffect(\n    () => {\n      const notAddedRepos = repos.filter(repo => !reposAlreadyAdded.includes(repo.node.id))\n      const visibleRepos = notAddedRepos\n      setVisibleRepos\n    }, [filter, reposAlreadyAdded]\n  )\n*/\n\n  useEffect(() => { searchRef.current && searchRef.current.focus()})\n\n  const filterAlreadyAdded = repos => {\n    return repos.filter(repo => !reposAlreadyAdded.includes(repo.node.id))\n  }\n  const filterByName = repos => {\n    return repos.filter(repo => repo.node.nameWithOwner.indexOf(filter) > -1)\n  }\n\n  const updateFilter = e => {\n    setFilter(e.target.value)\n    setRepoSelected(-1)\n  }\n\n  const handleClearSearch = () => setFilter('')\n\n  const handleNewProject = () => {\n    closePanel()\n    api.addRepo(toHex(project)).toPromise()\n  }\n\n  const onRepoSelected = repoArray => i => {\n    setProject(repoArray[i].node.id)\n    setRepoSelected(i)\n  }\n\n  // if there are visible (with or tiwhout filtration) repos, show them\n  // else if there are no repos to show but filtering is active - show \"no match\"\n  // else there are no repos to add (possibly all that could have been added\n  // already are\n  const RepoList = ({ visibleRepos, repoArray }) => {\n    if (visibleRepos.length) return (\n      <RadioList\n        items={repoArray}\n        selected={repoSelected}\n        onChange={onRepoSelected(repoArray)}\n      />\n    )\n\n    if (filter) return (\n      <RepoInfo>\n        <img css={`margin-bottom: ${2 * GU}px`} src={noResultsSvg} alt=\"\"  />\n        <Text.Block style={{ fontSize: '28px', marginBottom: '8px' }}>\n          No results found.\n        </Text.Block>\n        <Text.Block>\n          We can&#39;t find any items mathing your search.\n        </Text.Block>\n        <Button\n          size=\"mini\"\n          onClick={handleClearSearch}\n          css={`\n            margin-left: 8px;\n            border: 0;\n            box-shadow: unset;\n            padding: 4px;\n          `}\n        >\n          <Text size=\"small\" color={`${theme.link}`}>\n            Clear Filters\n          </Text>\n        </Button>\n      </RepoInfo>\n    )\n\n    return (\n      <RepoInfo>\n        <Text>No more repositories to add...</Text>\n      </RepoInfo>\n    )\n  }\n  RepoList.propTypes = {\n    visibleRepos: PropTypes.array.isRequired,\n    repoArray: PropTypes.array.isRequired,\n  }\n\n  return (\n    <React.Fragment>\n      <div css={`margin-top: ${3 * GU}px`}>\n        <Text weight=\"bold\">\n            Which repos do you want to add?\n        </Text>\n        <div>\n          <Query\n            fetchPolicy=\"cache-first\"\n            query={GET_REPOSITORIES}\n            onError={console.error}\n          >\n            {({ data, loading, error, refetch }) => {\n              if (data && data.viewer) {\n\n                const reposDownloaded = filterAlreadyAdded(data.viewer.repositories.edges)\n\n                const visibleRepos = filter ? filterByName(reposDownloaded) : reposDownloaded\n\n\n                const repoArray = visibleRepos.map(repo => ({\n                  title: repo.node.nameWithOwner,\n                  description: '',\n                  node: repo.node,\n                }))\n\n                return (\n                  <div>\n                    <TextInput\n                      type=\"search\"\n                      style={{ margin: '16px 0', flexShrink: '0' }}\n                      placeholder=\"Search\"\n                      wide\n                      value={filter}\n                      onChange={updateFilter}\n                      adornment={\n                        filter === '' && (\n                          <IconSearch\n                            css={`\n                                color: ${theme.surfaceOpened};\n                                margin-right: 8px;\n                              `}\n                          />\n                        )\n                      }\n                      adornmentPosition=\"end\"\n                      ref={searchRef}\n                    />\n\n                    <ScrollableList>\n                      <RepoList visibleRepos={visibleRepos} repoArray={repoArray} />\n                    </ScrollableList>\n\n                    <Info css={`margin: ${3 * GU}px 0`}>\n                        Projects in Aragon are a one-to-one mapping to a GitHub repository.\n                        You’ll be able to prioritize your backlog, reach consensus on issue\n                        valuations, and allocate bounties to multiple issues.\n                    </Info>\n\n                    <Button\n                      mode=\"strong\"\n                      wide\n                      onClick={handleNewProject}\n                      disabled={repoSelected < 0}\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                )\n              }\n\n              if (loading) return (\n                <RepoInfo>\n                  <LoadingAnimation />\n                  <div>Loading repositories...</div>\n                </RepoInfo>\n              )\n\n              if (error) return (\n                <RepoInfo>\n                  <Text size=\"xsmall\" style={{ margin: '20px 0' }}>\n                      Error {JSON.stringify(error)}\n                  </Text>\n                  <Button wide mode=\"strong\" onClick={() => refetch()}>\n                      Try refetching?\n                  </Button>\n                </RepoInfo>\n              )\n            }}\n          </Query>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst ScrollableList = styled.div`\n  flex-grow: 1;\n  overflow-y: auto;\n  padding-right: 10px;\n  margin: 16px 0;\n  // Hack needed to make the scrollable list, since the whole SidePanel is a scrollable container\n  height: calc(100vh - 420px);\n`\nconst RepoInfo = styled.div`\n  margin: 20px 0;\n  text-align: center;\n`\n\n// TODO: Use nodes instead of edges (the app should be adapted at some places)\nexport default NewProject\n","/* eslint-disable import/no-unused-modules */\nexport { default } from './NewProject'\n"]}