{
	"roles": [
		{
			"name": "Create a new reward",
			"id": "ADD_REWARD_ROLE",
			"params": [],
			"bytes": "0x7941efc179bdce37ebd8db3e2deb46ce5280bf6d2de2e50938a9e920494c1941"
		}
	],
	"environments": {
		"default": {
			"registry": "0x5f6f7e8cc7346a11ca2def8f827b7a0b612c56a1",
			"network": "rpc",
			"appName": "rewards.aragonpm.eth"
		},
		"rinkeby": {
			"registry": "0x98df287b6c145399aaa709692c8d308357bc085d",
			"appName": "rewards.aragonpm.eth",
			"wsRPC": "wss://rinkeby.eth.aragon.network/ws",
			"network": "rinkeby"
		},
		"continuous-deployment": {
			"registry": "0x98df287b6c145399aaa709692c8d308357bc085d",
			"appName": "rewards-cd.open.aragonpm.eth",
			"wsRPC": "wss://rinkeby.eth.aragon.network/ws",
			"network": "rinkeby"
		},
		"staging": {
			"registry": "0x98df287b6c145399aaa709692c8d308357bc085d",
			"appName": "rewards-staging.open.aragonpm.eth",
			"wsRPC": "wss://rinkeby.eth.aragon.network/ws",
			"network": "rinkeby"
		},
		"production": {
			"registry": "0x314159265dd8dbb310642f98f50c066173c1259b",
			"appName": "rewards.aragonpm.eth",
			"network": "mainnet"
		}
	},
	"path": "contracts/Rewards.sol",
	"appName": "rewards.aragonpm.eth",
	"env": {
		"registry": "0x5f6f7e8cc7346a11ca2def8f827b7a0b612c56a1",
		"network": "rpc",
		"appName": "rewards.aragonpm.eth"
	},
	"appId": "0x3ca69801a60916e9222ceb2fa3089b3f66b4e1b3fc49f4a562043d9ec1e5a00b",
	"abi": [
		{
			"constant": true,
			"inputs": [],
			"name": "hasInitialized",
			"outputs": [
				{
					"name": "",
					"type": "bool"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [
				{
					"name": "_script",
					"type": "bytes"
				}
			],
			"name": "getEVMScriptExecutor",
			"outputs": [
				{
					"name": "",
					"type": "address"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [],
			"name": "getRecoveryVault",
			"outputs": [
				{
					"name": "",
					"type": "address"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [
				{
					"name": "token",
					"type": "address"
				}
			],
			"name": "allowRecoverability",
			"outputs": [
				{
					"name": "",
					"type": "bool"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [],
			"name": "appId",
			"outputs": [
				{
					"name": "",
					"type": "bytes32"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [],
			"name": "totalClaimsEach",
			"outputs": [
				{
					"name": "",
					"type": "uint256"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [],
			"name": "getInitializationBlock",
			"outputs": [
				{
					"name": "",
					"type": "uint256"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [
				{
					"name": "_token",
					"type": "address"
				}
			],
			"name": "transferToVault",
			"outputs": [],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [
				{
					"name": "_sender",
					"type": "address"
				},
				{
					"name": "_role",
					"type": "bytes32"
				},
				{
					"name": "_params",
					"type": "uint256[]"
				}
			],
			"name": "canPerform",
			"outputs": [
				{
					"name": "",
					"type": "bool"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [],
			"name": "getEVMScriptRegistry",
			"outputs": [
				{
					"name": "",
					"type": "address"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [],
			"name": "kernel",
			"outputs": [
				{
					"name": "",
					"type": "address"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [],
			"name": "isPetrified",
			"outputs": [
				{
					"name": "",
					"type": "bool"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [],
			"name": "ADD_REWARD_ROLE",
			"outputs": [
				{
					"name": "",
					"type": "bytes32"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [],
			"name": "vault",
			"outputs": [
				{
					"name": "",
					"type": "address"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"name": "rewardId",
					"type": "uint256"
				}
			],
			"name": "RewardAdded",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"name": "rewardId",
					"type": "uint256"
				},
				{
					"indexed": false,
					"name": "claimant",
					"type": "address"
				}
			],
			"name": "RewardClaimed",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"name": "executor",
					"type": "address"
				},
				{
					"indexed": false,
					"name": "script",
					"type": "bytes"
				},
				{
					"indexed": false,
					"name": "input",
					"type": "bytes"
				},
				{
					"indexed": false,
					"name": "returnData",
					"type": "bytes"
				}
			],
			"name": "ScriptResult",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"name": "vault",
					"type": "address"
				},
				{
					"indexed": true,
					"name": "token",
					"type": "address"
				},
				{
					"indexed": false,
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "RecoverToVault",
			"type": "event"
		},
		{
			"constant": false,
			"inputs": [
				{
					"name": "_vault",
					"type": "address"
				}
			],
			"name": "initialize",
			"outputs": [],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [
				{
					"name": "_rewardID",
					"type": "uint256"
				}
			],
			"name": "claimReward",
			"outputs": [
				{
					"name": "",
					"type": "uint256"
				}
			],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [],
			"name": "getRewardsLength",
			"outputs": [
				{
					"name": "rewardsLength",
					"type": "uint256"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [
				{
					"name": "rewardID",
					"type": "uint256"
				}
			],
			"name": "getReward",
			"outputs": [
				{
					"name": "description",
					"type": "string"
				},
				{
					"name": "isMerit",
					"type": "bool"
				},
				{
					"name": "referenceToken",
					"type": "address"
				},
				{
					"name": "rewardToken",
					"type": "address"
				},
				{
					"name": "amount",
					"type": "uint256"
				},
				{
					"name": "startBlock",
					"type": "uint256"
				},
				{
					"name": "endBlock",
					"type": "uint256"
				},
				{
					"name": "duration",
					"type": "uint256"
				},
				{
					"name": "delay",
					"type": "uint256"
				},
				{
					"name": "rewardAmount",
					"type": "uint256"
				},
				{
					"name": "timeClaimed",
					"type": "uint256"
				},
				{
					"name": "creator",
					"type": "address"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [
				{
					"name": "_token",
					"type": "address"
				}
			],
			"name": "getTotalAmountClaimed",
			"outputs": [
				{
					"name": "",
					"type": "uint256"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [
				{
					"name": "_description",
					"type": "string"
				},
				{
					"name": "_isMerit",
					"type": "bool"
				},
				{
					"name": "_referenceToken",
					"type": "address"
				},
				{
					"name": "_rewardToken",
					"type": "address"
				},
				{
					"name": "_amount",
					"type": "uint256"
				},
				{
					"name": "_startBlock",
					"type": "uint64"
				},
				{
					"name": "_duration",
					"type": "uint64"
				},
				{
					"name": "_occurrences",
					"type": "uint8"
				},
				{
					"name": "_delay",
					"type": "uint64"
				}
			],
			"name": "newReward",
			"outputs": [
				{
					"name": "rewardId",
					"type": "uint256"
				}
			],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		}
	],
	"deployment": {
		"contractName": "Rewards",
		"compiledAt": "2020-01-21T05:07:36.718Z",
		"compiler": {
			"name": "solc",
			"version": "0.4.24+commit.e67f0147.Emscripten.clang",
			"optimizer": {
				"enabled": true,
				"runs": 10000
			}
		},
		"flattenedCode": "./code.sol",
		"transactionHash": "0x123ea53dc4468f1bb732b1a3faf4a3fe375d3921ec28c7980c0a2da1e8716806"
	},
	"functions": [
		{
			"sig": "initialize(address)",
			"roles": [],
			"notice": "Initialize Rewards app for Vault at `_vault`",
			"abi": {
				"constant": false,
				"inputs": [
					{
						"name": "_vault",
						"type": "address"
					}
				],
				"name": "initialize",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			}
		},
		{
			"sig": "claimReward(uint256)",
			"roles": [],
			"notice": "Claim my reward for #`_rewardID`",
			"abi": {
				"constant": false,
				"inputs": [
					{
						"name": "_rewardID",
						"type": "uint256"
					}
				],
				"name": "claimReward",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			}
		},
		{
			"sig": "newReward(string,bool,address,address,uint256,uint64,uint64,uint8,uint64)",
			"roles": [
				"ADD_REWARD_ROLE"
			],
			"notice": "Create a `_isMerit ? 'merit reward' : 'dividend'` that will distribute `@tokenAmount(_rewardToken, _amount)` to token holders who `_isMerit ? 'earned ' : 'hold '` `_referenceToken.symbol(): string` `(_occurrences > 1) ? ' from block ' + _startBlock + ' to block ' + (_startBlock + _duration) + '. This dividend will disburse every ' + _duration + ' blocks in proportion to the holders balance on the disbursement date. The first disbursement occurs at the end of the first cycle, on block ' + (_startBlock + _duration) + '.' : (_isMerit ? 'from block ' + _startBlock + 'to block ' + (_startBlock + _duration) +'.' : 'on block '+ _startBlock + '.')` (Reference: `_description`)",
			"abi": {
				"constant": false,
				"inputs": [
					{
						"name": "_description",
						"type": "string"
					},
					{
						"name": "_isMerit",
						"type": "bool"
					},
					{
						"name": "_referenceToken",
						"type": "address"
					},
					{
						"name": "_rewardToken",
						"type": "address"
					},
					{
						"name": "_amount",
						"type": "uint256"
					},
					{
						"name": "_startBlock",
						"type": "uint64"
					},
					{
						"name": "_duration",
						"type": "uint64"
					},
					{
						"name": "_occurrences",
						"type": "uint8"
					},
					{
						"name": "_delay",
						"type": "uint64"
					}
				],
				"name": "newReward",
				"outputs": [
					{
						"name": "rewardId",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			}
		}
	],
	"deprecatedFunctions": {}
}
