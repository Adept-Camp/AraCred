{"version":3,"sources":["components/Panel/SubmitWork/SubmitWork.js","components/Panel/SubmitWork/index.js"],"names":["SubmitWork","issue","githubCurrentUser","api","connectedAccount","theme","closePanel","comments","setComments","hours","setHours","proof","setProof","ack1","setAck1","ack2","setAck2","GU","today","Date","time","data","user","submissionDate","toISOString","ipfsHash","bountiesRegistry","call","toPromise","external","standardBounties","abi","fulfillBounty","standardBountyId","canSubmit","e","target","value","surfaceContentSecondary","propTypes","issueShape","AckText","Text","AckRow","styled","div"],"mappings":"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","file":"SubmitWork.849fe906.js","sourceRoot":"../app","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport { Checkbox, GU, Text, TextInput, useTheme } from '@aragon/ui'\n\nimport { Form, FormField } from '../../Form'\nimport useGithubAuth from '../../../hooks/useGithubAuth'\nimport { useAragonApi } from '../../../api-react'\nimport { usePanelManagement } from '../../Panel'\nimport { ipfsAdd } from '../../../utils/ipfs-helpers'\nimport { issueShape } from '../../../utils/shapes.js'\nimport standardBounties from '../../../abi/StandardBounties.json'\nimport { IssueTitle } from '../PanelComponents'\n\nconst SubmitWork = ({ issue }) => {\n  const githubCurrentUser = useGithubAuth()\n  const { api, connectedAccount } = useAragonApi()\n  const theme = useTheme()\n\n  const { closePanel } = usePanelManagement()\n  const [ comments, setComments ] = useState('')\n  const [ hours, setHours ] = useState(0)\n  const [ proof, setProof ] = useState('')\n  const [ ack1, setAck1 ] = useState(false)\n  const [ ack2, setAck2 ] = useState(false)\n\n  const updateComments = e => setComments(e.target.value)\n  const updateHours = e => setHours(e.target.value)\n  const updateProof = e => setProof(e.target.value)\n  const toggleAck1 = () => setAck1(!ack1)\n  const toggleAck2 = () => setAck2(!ack2)\n\n  const onSubmitWork = async() => {\n    const today = new Date()\n    const time = (hours === '' || hours === 0) ? '-' : hours\n    const data = {\n      user: githubCurrentUser,\n      submissionDate: today.toISOString(),\n      comments,\n      proof,\n      hours: time,\n      ack1,\n      ack2,\n    }\n\n    closePanel()\n\n    const ipfsHash = await ipfsAdd(data)\n    const bountiesRegistry = await api.call('bountiesRegistry').toPromise()\n    const bountyContract = api.external(bountiesRegistry, standardBounties.abi)\n    bountyContract.fulfillBounty(\n      connectedAccount, // address _sender,\n      issue.standardBountyId, // uint _bountyId,\n      [connectedAccount], // address payable [] memory  _fulfillers,\n      ipfsHash // string memory _data\n    ).toPromise()\n  }\n\n  const canSubmit = () => !(ack1 && ack2 && proof)\n\n  return (\n    <div css={`margin: ${2 * GU}px 0`}>\n      <Form\n        onSubmit={onSubmitWork}\n        submitText=\"Submit Work\"\n        noSeparator\n        submitDisabled={canSubmit()}\n      >\n        <IssueTitle issue={issue} />\n\n        <FormField\n          label=\"Submission\"\n          required\n          input={\n            <TextInput.Multiline\n              name=\"proof\"\n              value={proof}\n              rows=\"3\"\n              onChange={updateProof}\n              placeholder=\"Add a link to your work, such as a document or a pull request.\"\n              wide\n            />\n          }\n        />\n        <FormField\n          label=\"Additional Comments\"\n          input={\n            <TextInput.Multiline\n              name=\"comments\"\n              rows=\"3\"\n              value={comments}\n              onChange={updateComments}\n              placeholder=\"Comments or details that havenâ€™t already been described elsewhere.\"\n              wide\n            />\n          }\n        />\n\n        <FormField\n          label=\"Hours Worked\"\n          input={\n            <TextInput.Number\n              name=\"hours\"\n              value={hours}\n              onChange={updateHours}\n              wide\n            />\n          }\n        />\n\n        <AckRow>\n          <div css=\"width: 23px\">\n            <Checkbox checked={ack1} onChange={toggleAck1} />\n          </div>\n          <AckText color={`${theme.surfaceContentSecondary}`}>\n            I acknowledge that my work must be accepted for me to receive the\n            payout.\n          </AckText>\n        </AckRow>\n\n        <AckRow>\n          <div css=\"width: 23px\">\n            <Checkbox checked={ack2} onChange={toggleAck2} />\n          </div>\n          <AckText color={`${theme.surfaceContentSecondary}`}>\n            I understand that reporting hours is for informational and planning purposes only.\n          </AckText>\n        </AckRow>\n      </Form>\n    </div>\n  )\n}\n\nSubmitWork.propTypes = issueShape\n\nconst AckText = styled(Text)`\n  margin-left: ${GU}px;\n`\nconst AckRow = styled.div`\n  display: flex;\n  margin: ${2 * GU}px 0;\n`\n\nexport default SubmitWork\n","/* eslint-disable import/no-unused-modules */\nexport { default } from './SubmitWork'\n"]}