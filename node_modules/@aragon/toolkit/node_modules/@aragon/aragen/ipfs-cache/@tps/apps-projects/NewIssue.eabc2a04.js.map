{"version":3,"sources":["components/Panel/NewIssue/AuthorizeGitHub.js","components/Panel/NewIssue/NewIssue.js","components/Panel/NewIssue/index.js"],"names":["Loading","GU","SCOPE","popupRef","AuthorizeGitHub","api","githubLoading","setGithubLoading","window","addEventListener","handlePopupMessage","removeEventListener","message","source","data","from","name","code","value","token","emitTrigger","REQUESTED_GITHUB_TOKEN_SUCCESS","status","STATUS","AUTHENTICATED","scope","err","REQUESTED_GITHUB_TOKEN_FAILURE","FAILED","requestExtraPermissions","NewIssueWrap","Creating","display","justifyContent","alignItems","height","flexDirection","marginBottom","NewIssue","React","PureComponent","initialState","index","setState","selectedProject","e","title","target","description","labels","state","componentDidUpdate","prevProps","prevState","render","reposManaged","props","projectChange","titleChange","descriptionChange","items","map","repo","reposIds","id","NEW_ISSUE","console","error","newIssue","result","loading","called","canSubmit","resize","paddingTop","paddingBottom","createIssue","closePanel","PropTypes","func","isRequired","oneOfType","string","arrayOf","shape","project","repos","appState","github","repoNames","metadata","_repo"],"mappings":";AAwFC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAAA,IAAA,EAAA,EAAA,QAAA,sBAxFD,EAAA,EAAA,QAAA,UACA,EAAA,QAAA,sBACA,EAAA,QAAA,cACA,EAAA,QAAA,gBACA,EAAA,QAAA,6BAIA,EAAA,QAAA,yBAgFC,SAAA,IAAA,GAAA,mBAAA,QAAA,OAAA,KAAA,IAAA,EAAA,IAAA,QAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,GAAA,OAAA,GAAA,iBAAA,GAAA,mBAAA,EAAA,MAAA,CAAA,QAAA,GAAA,IAAA,EAAA,IAAA,GAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,IAAA,EAAA,GAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,KAAA,IAAA,EAAA,KAAA,EAAA,KAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,IAAA,EAAA,EAAA,QAAA,IAAA,WAAA,CAAA,YAAA,8BAAA,YAAA,YAAA,CAAA,CAAA,gCAAA,MAAA,GAAA,EAAA,MA9ED,MAAMA,EAAU,IACd,EAAA,QAAA,cAAA,EAAA,CAA6C,KAAA,GAAKC,EAAAA,IAChD,EAAC,QAAA,cAAA,EAAD,iBADF,OAKIC,EAAQ,cACd,IAAIC,EAAW,KAEA,SAASC,IAChB,MAAA,IAAEC,IAAQ,EAAhB,EAAA,iBACQC,EAAeC,IAAqB,EAAS,EAAA,WAAA,IAE3C,EAAA,EAAA,WAAA,KACRC,OAAOC,iBAAiB,UAAWC,GAC5B,KACLF,OAAOG,oBAAoB,UAAWD,MAIpCA,MAAAA,GAAqB,EAAY,EAAA,aAAA,MAAA,IACjC,GAACP,GACDS,EAAQC,SAAWV,IAEvBA,EAAW,KAEe,UAAtBS,EAAQE,KAAKC,MACS,SAAtBH,EAAQE,KAAKE,MAAiB,CAC1BC,MAAAA,EAAOL,EAAQE,KAAKI,MACtB,IACIC,MAAAA,QAAc,EAASF,EAAAA,UAAAA,GAC7BZ,EAAIe,YAAYC,EAAhB,+BAAgD,CAC9CC,OAAQC,EAAOC,OAAAA,cACfC,MAAOvB,EACPiB,MAAAA,IAEF,MAAOO,GACPrB,EAAIe,YAAYO,EAAhB,+BAAgD,CAC9CL,OAAQC,EAAOK,OAAAA,OACfH,MAAO,KACPN,MAAO,UAIZ,IAEGU,GAA0B,EAAY,EAAA,aAAA,KAC1CtB,GAAiB,GACjBJ,GAAW,EAAYA,EAAAA,aAAAA,EAAUD,IAChC,IAECI,OAAAA,EAAsB,EAAC,QAAA,cAAA,EAAR,MAGjB,EACE,QAAA,cAAA,EAAA,QAAA,SAAA,KAAA,EADF,QAAA,cAAA,KAAA,MAEE,EAAC,QAAA,cAAA,EAAD,KAAM,MAAN,CAAY,KAAK,UAFnB,wCAGE,EAHF,QAAA,cAAA,KAAA,MAIE,EAAC,QAAA,cAAA,EAAD,KAAM,MAIJ,KAAA,0LAAA,EAAC,QAAA,cAAA,EAAD,KAAA,CACE,KAAK,+GALT,qBAOE,KAAA,EAPF,QAAA,cAAA,KAAA,MAOQ,EAPR,QAAA,cAAA,KAAA,MASkB,wFAAA,IAChB,EAAC,QAAA,cAAA,EAAD,KAAA,CACE,KAAK,gFAXT,aAJF,sBAkBE,EAlBF,QAAA,cAAA,KAAA,MAmBE,EAAC,QAAA,cAAA,EAAD,OAAA,CAAQ,QAASuB,EAAyB,KAAK,UAnBjD;;ACmIWC,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAAAA,IAAAA,EAAAA,EAAAA,QAAAA,0CAAAA,EAAAA,EAAAA,QAAAA,sBAnMf,EAAA,EAAA,QAAA,UACA,EAAA,EAAA,QAAA,eACA,EAAA,QAAA,gBACA,EAAA,QAAA,sBACA,EAAA,QAAA,cACA,EAAA,QAAA,iCACA,EAAA,QAAA,cACA,EAAA,QAAA,gBACA,EAAA,QAAA,eACA,EAAA,QAAA,mCACA,EAAA,EAAA,QAAA,sBAyLeA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,OAAAA,KAAAA,GAAAA,GAAAA,OAAAA,sBAAAA,CAAAA,IAAAA,EAAAA,OAAAA,sBAAAA,GAAAA,IAAAA,EAAAA,EAAAA,OAAAA,SAAAA,GAAAA,OAAAA,OAAAA,yBAAAA,EAAAA,GAAAA,cAAAA,EAAAA,KAAAA,MAAAA,EAAAA,GAAAA,OAAAA,EAAAA,SAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,UAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,MAAAA,UAAAA,GAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,GAAAA,QAAAA,SAAAA,IAAAA,EAAAA,EAAAA,SAAAA,EAAAA,EAAAA,EAAAA,MAAAA,OAAAA,0BAAAA,OAAAA,iBAAAA,EAAAA,OAAAA,0BAAAA,IAAAA,EAAAA,OAAAA,IAAAA,QAAAA,SAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,OAAAA,yBAAAA,EAAAA,MAAAA,OAAAA,EApLf,MAAMC,EAAW,IACf,EAAA,QAAA,cAAA,MAAA,CACE,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,OACRC,cAAe,WAGjB,EAAC,QAAA,cAAA,EAAD,iBAAA,CAAkB,MAAO,CAAEC,aAAc,UAV7C,qBAoLeP,IAAAA,EAAAA,EAAAA,QAAAA,IAAAA,WAAAA,CAAAA,YAAAA,uBAAAA,YAAAA,gBAAAA,CAAAA,CAAAA,UAAAA,QAAAA,GAAAA,EAAAA,MArKf,MAAMQ,UAAiBC,EAAMC,QAAAA,cAAc,eAAA,GAAA,SAAA,IACjCF,EAAAA,EAAAA,SAAAA,KAAAA,QAAAA,EAASG,eAqCDC,EAAAA,EAAAA,SAAAA,KAAAA,gBAAAA,IACTC,KAAAA,SAAS,CAAEC,gBAAiBF,OAGrBG,EAAAA,EAAAA,SAAAA,KAAAA,cAAAA,IACPF,KAAAA,SAAS,CAAEG,MAAOD,EAAEE,OAAO7B,WAGd2B,EAAAA,EAAAA,SAAAA,KAAAA,oBAAAA,IACbF,KAAAA,SAAS,CAAEK,YAAaH,EAAEE,OAAO7B,WAGzB2B,EAAAA,EAAAA,SAAAA,KAAAA,eAAAA,IACRF,KAAAA,SAAS,CAAEM,OAAQJ,EAAEE,OAAO7B,WAGvB,EAAA,EAAA,SAAA,KAAA,YAAA,MAA6B,KAArB,KAAKgC,MAAMJ,OAAgB,KAAKI,MAAMN,gBAAkB,IA3B5EO,mBAAmBC,EAAWC,GACxB,GAAA,KAAKH,QAAUG,EAAW,CACtBH,MAAAA,EAAa,EAAA,GAAA,KAAKA,OAEnBP,KAAAA,SACAO,EAAAA,GAAAA,KAwBTI,SACQ,MAAA,MAAER,EAAF,YAASE,EAAT,gBAAsBJ,GAAoB,KAAKM,OAC/C,aAAEK,GAAiB,KAAKC,OACxB,cACJC,EADI,YAEJC,EAFI,kBAGJC,GACE,KAEEC,EACoB,iBAAjBL,EACH,WACA,CAAE,sBAAuBA,EAAaM,IAAIC,GAAQA,EAAK9C,OAEvD+C,EACoB,iBAAjBR,EAA4B,GAAKA,EAAaM,IAAIC,GAAQA,EAAKE,IAElEA,EAAKpB,EAAkB,EAAImB,EAASnB,EAAkB,GAAK,GAK/D,OAAA,EAAA,QAAA,cAAA,EAAA,CAAqB,KAAA,EAAI3C,EAAAA,IACvB,EAAC,QAAA,cAAA,EAAD,SAAA,CACE,SAAUgE,EADZ,UAEE,UAAW,CAAEnB,MAAAA,EAAOE,YAAAA,EAAagB,GAAAA,GACjC,QAASE,QAAQC,OAEhB,CAACC,EAAUC,KACJ,MAAA,KAAEvD,EAAF,QAAQwD,EAAR,MAAiBH,EAAjB,OAAwBI,GAAWF,EACrC,IAACE,EAED,OAAA,EAAC,QAAA,cAAA,EAAD,KAAA,CACE,SAAUH,EACV,WAAW,eACX,eAAgB,KAAKI,aAErB,EAAC,QAAA,cAAA,EAAD,MAAA,CAAO,MAAM,WACX,EAAC,QAAA,cAAA,EAAD,SAAA,CACE,MAAOZ,EACP,SAAUhB,EACV,SAAUa,EACV,MAJF,EAKE,UAAQ,KAGZ,EAAC,QAAA,cAAA,EAAD,MAAA,CAAO,MAAM,SACX,EAAC,QAAA,cAAA,EAAD,UAAA,CAAW,SAAUC,EAAa,UAAlC,EAA2C,MAAI,KAEjD,EAAC,QAAA,cAAA,EAAD,MAAA,CAAO,MAAM,eACX,EAAC,QAAA,cAAA,EAAD,UAAW,UAAX,CACE,KAAM,EACN,MAAO,CACLe,OAAQ,OACRtC,OAAQ,OACRuC,WAAY,MACZC,cAAe,OAEjB,SAAUhB,EACV,MAAI,MAMVW,GAAAA,EACK,OAAA,EAAC,QAAA,cAAA,EAAR,MAEEH,GAAAA,EACK,OAAA,EAAP,QAAA,cAAA,MAAA,KAAA,SAGI,MAAA,YAAES,GAAgB9D,EAIjB,OAHH8D,GACGpB,KAAAA,MAAMqB,aAEN,UApIbvC,EAAAA,EAAAA,SAAAA,EAEe,YAAA,CACjBuC,WAAYC,EAAUC,QAAAA,KAAKC,WAC3BzB,aAAcuB,EAAUG,QAAAA,UAAU,CAChCH,EAAUI,QAAAA,OACVJ,EAAUK,QAAAA,QACRL,EAAUM,QAAAA,MAAM,CACdpE,KAAM8D,EAAUI,QAAAA,OAChBlB,GAAIc,EAAUI,QAAAA,YAGjBF,cAZD1C,EAAAA,EAAAA,SAAAA,EAekB,eAAA,CACpBM,gBAAiB,EACjByC,QAAS,EACTvC,MAAO,GACPE,YAAa,GACbC,OAAQ,KA0HZ,MAAMnB,EAAe,KACb,MAAA,WAAE+C,IAAe,EAAvB,EAAA,sBACMS,GAAQ,EAAd,EAAA,sBACQC,UAAU,OAAEC,KAAa,EAAjC,EAAA,gBACI,IAACA,EAAO/D,MAAO,OAAO,EAAC,QAAA,cAAA,EAAD,QAAP,MAEbgE,MAAAA,EAAYH,EACdA,EAAMzB,IAAIC,IAAS,CACnB9C,KAAM8C,EAAK4B,SAAS1E,KACpBgD,GAAIF,EAAKhD,KAAK6E,SAEd,WACE5B,GAAYuB,GAAS,IAAIzB,IAAIC,GAAQA,EAAKhD,KAAK6E,OAGnD,OAAA,EAAC,QAAA,cAAA,EAAD,CACE,WAAYd,EACZ,aAAcY,EACd,SAAU1B,KAKDjC,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;AClMf,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,OAAA,eAAA,QAAA,UAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,IAAA,EAAA,EAAA,QAAA,eAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA","file":"NewIssue.eabc2a04.js","sourceRoot":"../app","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\nimport { useAragonApi } from '../../../api-react'\nimport { Button, GU, Link, Text } from '@aragon/ui'\nimport { LoadingAnimation } from '../../Shared'\nimport {\n  REQUESTED_GITHUB_TOKEN_SUCCESS,\n  REQUESTED_GITHUB_TOKEN_FAILURE,\n} from '../../../store/eventTypes'\nimport { getToken, githubPopup, STATUS } from '../../../utils/github'\n\nconst Loading = () => (\n  <div css={`text-align: center; margin-top: ${15 * GU}px`}>\n    <LoadingAnimation />\n  </div>\n)\n\nconst SCOPE = 'public_repo'\nlet popupRef = null\n\nexport default function AuthorizeGitHub() {\n  const { api } = useAragonApi()\n  const [ githubLoading, setGithubLoading ] = useState(false)\n\n  useEffect(() => {\n    window.addEventListener('message', handlePopupMessage)\n    return () => {\n      window.removeEventListener('message', handlePopupMessage)\n    }\n  })\n\n  const handlePopupMessage = useCallback(async message => {\n    if (!popupRef) return\n    if (message.source !== popupRef) return\n\n    popupRef = null\n\n    if (message.data.from !== 'popup') return\n    if (message.data.name === 'code') {\n      const code = message.data.value\n      try {\n        const token = await getToken(code)\n        api.emitTrigger(REQUESTED_GITHUB_TOKEN_SUCCESS, {\n          status: STATUS.AUTHENTICATED,\n          scope: SCOPE,\n          token\n        })\n      } catch (err) {\n        api.emitTrigger(REQUESTED_GITHUB_TOKEN_FAILURE, {\n          status: STATUS.FAILED,\n          scope: null,\n          token: null,\n        })\n      }\n    }\n  }, [])\n\n  const requestExtraPermissions = useCallback(() => {\n    setGithubLoading(true)\n    popupRef = githubPopup(popupRef, SCOPE)\n  }, [])\n\n  if (githubLoading) return <Loading />\n\n  return (\n    <>\n      <br />\n      <Text.Block size=\"xlarge\">We’re going to need more permissions</Text.Block>\n      <br />\n      <Text.Block>\n        The Projects app can make GitHub issues on your behalf, but to do that\n        you need to increase the level of authorization granted to the app.\n        GitHub calls this level of permissions the “\n        <Link\n          href=\"https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/#available-scopes\"\n        >public_repo scope</Link>”.\n        <br /><br />\n        Granting this permission does not give any third party access to your\n        GitHub account.{' '}\n        <Link\n          href=\"https://autark.gitbook.io/open-enterprise/apps/projects#github-authorization\"\n        >Read here</Link> for more details.\n      </Text.Block>\n      <br />\n      <Button onClick={requestExtraPermissions} mode=\"strong\">\n        I’m ready, authorize extra GitHub permissions\n      </Button>\n    </>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Mutation } from 'react-apollo'\nimport { useAragonApi } from '../../../api-react'\nimport { Field, GU, TextInput, DropDown } from '@aragon/ui'\nimport { NEW_ISSUE } from '../../../utils/gql-queries.js'\nimport { Form } from '../../Form'\nimport { LoadingAnimation } from '../../Shared'\nimport { usePanelManagement } from '../../Panel'\nimport { useDecoratedRepos } from '../../../context/DecoratedRepos'\nimport AuthorizeGitHub from './AuthorizeGitHub'\n\n// TODO: labels\n// TODO: import validator from '../data/validation'\n\nconst Creating = () => (\n  <div\n    style={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100%',\n      flexDirection: 'column',\n    }}\n  >\n    <LoadingAnimation style={{ marginBottom: '32px' }} />\n    Creating issue...\n  </div>\n)\n\nclass NewIssue extends React.PureComponent {\n  state = NewIssue.initialState\n  static propTypes = {\n    closePanel: PropTypes.func.isRequired,\n    reposManaged: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(\n        PropTypes.shape({\n          name: PropTypes.string,\n          id: PropTypes.string,\n        })\n      ),\n    ]).isRequired, // array of managed repos\n  }\n\n  static initialState = {\n    selectedProject: 0,\n    project: 0,\n    title: '',\n    description: '',\n    labels: '', // TODO: Change to array\n  }\n\n  // static validate = validator.compile({\n\n  // })\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state !== prevState) {\n      const state = { ...this.state }\n\n      this.setState({\n        ...state,\n        // isValid: NewIssue.validate(state)\n      })\n    }\n  }\n\n  projectChange = index => {\n    this.setState({ selectedProject: index })\n  }\n\n  titleChange = e => {\n    this.setState({ title: e.target.value })\n  }\n\n  descriptionChange = e => {\n    this.setState({ description: e.target.value })\n  }\n\n  labelsChange = e => {\n    this.setState({ labels: e.target.value })\n  }\n\n  canSubmit = () => !(this.state.title !== '' && this.state.selectedProject > 0)\n\n  render() {\n    const { title, description, selectedProject } = this.state\n    const { reposManaged } = this.props\n    const {\n      projectChange,\n      titleChange,\n      descriptionChange,\n    } = this\n\n    const items =\n      typeof reposManaged === 'string'\n        ? 'No repos'\n        : [ 'Select a project', ...reposManaged.map(repo => repo.name) ]\n\n    const reposIds =\n      typeof reposManaged === 'string' ? [] : reposManaged.map(repo => repo.id)\n\n    const id = selectedProject > 0 ? reposIds[selectedProject - 1] : ''\n\n    // TODO: refetch Issues list after mutation\n\n    return (\n      <div css={`margin: ${2 * GU}px 0`}>\n        <Mutation\n          mutation={NEW_ISSUE}\n          variables={{ title, description, id }}\n          onError={console.error}\n        >\n          {(newIssue, result) => {\n            const { data, loading, error, called } = result\n            if (!called) {\n              return (\n                <Form\n                  onSubmit={newIssue}\n                  submitText=\"Submit Issue\"\n                  submitDisabled={this.canSubmit()}\n                >\n                  <Field label=\"Project\">\n                    <DropDown\n                      items={items}\n                      selected={selectedProject}\n                      onChange={projectChange}\n                      wide\n                      required\n                    />\n                  </Field>\n                  <Field label=\"Title\">\n                    <TextInput onChange={titleChange} required wide />\n                  </Field>\n                  <Field label=\"Description\">\n                    <TextInput.Multiline\n                      rows={3}\n                      style={{\n                        resize: 'none',\n                        height: 'auto',\n                        paddingTop: '5px',\n                        paddingBottom: '5px',\n                      }}\n                      onChange={descriptionChange}\n                      wide\n                    />\n                  </Field>\n                </Form>\n              )\n            } // end if(!called)\n            if (loading) {\n              return <Creating />\n            }\n            if (error) {\n              return <div>Error</div>\n            }\n\n            const { createIssue } = data\n            if (createIssue) {\n              this.props.closePanel()\n            }\n            return null\n          }}\n        </Mutation>\n      </div>\n    )\n  }\n}\n\n// TODO: move entire component to functional component\n// the following was a quick way to allow us to use hooks\nconst NewIssueWrap = () => {\n  const { closePanel } = usePanelManagement()\n  const repos = useDecoratedRepos()\n  const { appState: { github } } = useAragonApi()\n  if (!github.scope) return <AuthorizeGitHub />\n\n  const repoNames = repos\n    ? repos.map(repo => ({\n      name: repo.metadata.name,\n      id: repo.data._repo,\n    }))\n    : 'No repos'\n  const reposIds = (repos || []).map(repo => repo.data._repo)\n\n  return (\n    <NewIssue\n      closePanel={closePanel}\n      reposManaged={repoNames}\n      reposIds={reposIds}\n    />\n  )\n}\n\nexport default NewIssueWrap\n","/* eslint-disable import/no-unused-modules */\nexport { default } from './NewIssue'\n"]}