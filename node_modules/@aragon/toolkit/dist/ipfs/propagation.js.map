{"version":3,"sources":["../../src/ipfs/propagation.js"],"names":["queryCidAtGateway","gateway","cid","GATEWAY_FETCH_TIMEOUT","Error","GATEWAY_FETCH_TIMEOUT_MSG","success","err","error","propagateFile","options","progressCallback","noop","gateways","DEFAULT_GATEWAYS","results","Promise","all","map","succeeded","filter","status","length","failed","errors","result","propagateFiles","CIDs","reduce","prev","current"],"mappings":";;;;;;;;AAAA;;AAEA;;AACA;;;;AAFA;AAQA,eAAeA,iBAAf,CAAiCC,OAAjC,EAA0CC,GAA1C,EAA+C;AAC7C,MAAI;AACF,UAAM,uBACJ,wBAAO,GAAED,OAAQ,IAAGC,GAAI,EAAxB,CADI,EAEJC,gCAFI,EAGJ,IAAIC,KAAJ,CAAUC,oCAAV,CAHI,CAAN;AAMA,WAAO;AACLC,MAAAA,OAAO,EAAE,IADJ;AAELJ,MAAAA,GAFK;AAGLD,MAAAA;AAHK,KAAP;AAKD,GAZD,CAYE,OAAOM,GAAP,EAAY;AACZ,WAAO;AACLD,MAAAA,OAAO,EAAE,KADJ;AAELJ,MAAAA,GAFK;AAGLD,MAAAA,OAHK;AAILO,MAAAA,KAAK,EAAED;AAJF,KAAP;AAMD;AACF;;AAEM,eAAeE,aAAf,CAA6BP,GAA7B,EAAkCQ,OAAO,GAAG,EAA5C,EAAgD;AACrD,QAAM;AAAEC,IAAAA,gBAAgB,GAAGC,UAArB;AAA2BC,IAAAA,QAAQ,GAAGC;AAAtC,MAA2DJ,OAAjE;AAEA,QAAMK,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAR,CACpBJ,QAAQ,CAACK,GAAT,CAAajB,OAAO,IAAID,iBAAiB,CAACC,OAAD,EAAUC,GAAV,CAAzC,CADoB,CAAtB;AAIA,QAAMiB,SAAS,GAAGJ,OAAO,CAACK,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACf,OAAhC,EAAyCgB,MAA3D;AACA,QAAMC,MAAM,GAAGV,QAAQ,CAACS,MAAT,GAAkBH,SAAjC;AAEAR,EAAAA,gBAAgB,CAAC,CAAD,EAAI;AAAET,IAAAA,GAAF;AAAOiB,IAAAA,SAAP;AAAkBI,IAAAA;AAAlB,GAAJ,CAAhB;AAEA,QAAMC,MAAM,GAAGT,OAAO,CACnBK,MADY,CACLK,MAAM,IAAIA,MAAM,CAACjB,KADZ,EAEZU,GAFY,CAERO,MAAM,IAAIA,MAAM,CAACjB,KAFT,CAAf;AAIA,SAAO;AACLW,IAAAA,SADK;AAELI,IAAAA,MAFK;AAGLC,IAAAA;AAHK,GAAP;AAKD;;AAEM,eAAeE,cAAf,CAA8BC,IAA9B,EAAoCjB,OAAO,GAAG,EAA9C,EAAkD;AACvD,QAAMK,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAR,CACpBU,IAAI,CAACT,GAAL,CAAShB,GAAG,IAAIO,aAAa,CAACP,GAAD,EAAMQ,OAAN,CAA7B,CADoB,CAAtB;AAIA,QAAM;AAAEG,IAAAA,QAAQ,GAAGC;AAAb,MAAkCJ,OAAxC;AACA,SAAO;AACLG,IAAAA,QADK;AAELM,IAAAA,SAAS,EAAEJ,OAAO,CAACa,MAAR,CAAe,CAACC,IAAD,EAAOC,OAAP,KAAmBD,IAAI,GAAGC,OAAO,CAACX,SAAjD,EAA4D,CAA5D,CAFN;AAGLI,IAAAA,MAAM,EAAER,OAAO,CAACa,MAAR,CAAe,CAACC,IAAD,EAAOC,OAAP,KAAmBD,IAAI,GAAGC,OAAO,CAACP,MAAjD,EAAyD,CAAzD,CAHH;AAILC,IAAAA,MAAM,EAAET,OAAO,CAACa,MAAR,CAAe,CAACC,IAAD,EAAOC,OAAP,KAAmB,CAAC,GAAGD,IAAJ,EAAU,GAAGC,OAAO,CAACN,MAArB,CAAlC,EAAgE,EAAhE;AAJH,GAAP;AAMD","sourcesContent":["import fetch from 'node-fetch'\n//\nimport { withTimeout, noop } from '../node'\nimport {\n  GATEWAY_FETCH_TIMEOUT,\n  GATEWAY_FETCH_TIMEOUT_MSG,\n  DEFAULT_GATEWAYS,\n} from './constants'\n\nasync function queryCidAtGateway(gateway, cid) {\n  try {\n    await withTimeout(\n      fetch(`${gateway}/${cid}`),\n      GATEWAY_FETCH_TIMEOUT,\n      new Error(GATEWAY_FETCH_TIMEOUT_MSG)\n    )\n\n    return {\n      success: true,\n      cid,\n      gateway,\n    }\n  } catch (err) {\n    return {\n      success: false,\n      cid,\n      gateway,\n      error: err,\n    }\n  }\n}\n\nexport async function propagateFile(cid, options = {}) {\n  const { progressCallback = noop, gateways = DEFAULT_GATEWAYS } = options\n\n  const results = await Promise.all(\n    gateways.map(gateway => queryCidAtGateway(gateway, cid))\n  )\n\n  const succeeded = results.filter(status => status.success).length\n  const failed = gateways.length - succeeded\n\n  progressCallback(1, { cid, succeeded, failed })\n\n  const errors = results\n    .filter(result => result.error)\n    .map(result => result.error)\n\n  return {\n    succeeded,\n    failed,\n    errors,\n  }\n}\n\nexport async function propagateFiles(CIDs, options = {}) {\n  const results = await Promise.all(\n    CIDs.map(cid => propagateFile(cid, options))\n  )\n\n  const { gateways = DEFAULT_GATEWAYS } = options\n  return {\n    gateways,\n    succeeded: results.reduce((prev, current) => prev + current.succeeded, 0),\n    failed: results.reduce((prev, current) => prev + current.failed, 0),\n    errors: results.reduce((prev, current) => [...prev, ...current.errors], []),\n  }\n}\n"],"file":"propagation.js"}