{"version":3,"sources":["../../src/ipfs/install.js"],"names":["installGoIpfs","local","location","distVersion","GO_IMPL_DIST_VERSION","distUrl","GO_IMPL_DIST_URL","options","logger","noop","npmBinary","exacaOptions","cwd","undefined","env","GO_IPFS_DIST_URL","npmArgs","logPrefix","join","installProcess","stdout","on","data","err","stderr","includes","Error"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;AAFA;AAIO,MAAMA,aAAa,GAAG,OAC3BC,KAD2B,EAE3BC,QAF2B,EAG3BC,WAAW,GAAGC,+BAHa,EAI3BC,OAAO,GAAGC,2BAJiB,EAK3BC,OAAO,GAAG,EALiB,KAMxB;AACH,QAAM;AAAEC,IAAAA,MAAM,GAAGC;AAAX,MAAoBF,OAA1B;AAEA,QAAMG,SAAS,GAAG,kCAAlB;AACA,QAAMC,YAAY,GAAG;AACnBC,IAAAA,GAAG,EAAEX,KAAK,GAAGC,QAAH,GAAcW,SADL;AAEnBC,IAAAA,GAAG,EAAE;AACH;;;AAGAC,MAAAA,gBAAgB,EAAEV;AAClB;;;;AAIA;;AATG;AAFc,GAArB;AAcA,QAAMW,OAAO,GAAG,CACd,SADc,EAEb,WAAUb,WAAY,EAFT,EAGdF,KAAK,GAAG,QAAH,GAAc,UAHL,CAAhB;AAMA,QAAMgB,SAAS,GAAI,OAAMD,OAAO,CAACE,IAAR,CAAa,GAAb,CAAkB,GAA3C;AACA,QAAMC,cAAc,GAAG,oBAAMT,SAAN,EAAiBM,OAAjB,EAA0BL,YAA1B,CAAvB;AAEAQ,EAAAA,cAAc,CAACC,MAAf,CAAsBC,EAAtB,CAAyB,MAAzB,EAAiCC,IAAI,IAAI;AACvC,QAAIA,IAAJ,EAAUd,MAAM,CAAE,GAAES,SAAU,IAAGK,IAAK,EAAtB,CAAN;AACX,GAFD;;AAIA,MAAI;AACF,WAAO,MAAMH,cAAb;AACD,GAFD,CAEE,OAAOI,GAAP,EAAY;AACZ,QAAIA,GAAG,CAACC,MAAJ,IAAcD,GAAG,CAACC,MAAJ,CAAWC,QAAX,CAAoB,2BAApB,CAAlB,EAAoE;AAClE,YAAM,IAAIC,KAAJ,CACH,2BAA0BvB,WAAY,8EADnC,CAAN;AAGD,KAJD,MAIO;AACL,YAAM,IAAIuB,KAAJ,CAAUH,GAAV,CAAN;AACD;AACF;AACF,CAhDM","sourcesContent":["import execa from 'execa'\n//\nimport { noop, getNodePackageManager } from '../node'\nimport { GO_IMPL_DIST_URL, GO_IMPL_DIST_VERSION } from './constants'\n\nexport const installGoIpfs = async (\n  local,\n  location,\n  distVersion = GO_IMPL_DIST_VERSION,\n  distUrl = GO_IMPL_DIST_URL,\n  options = {}\n) => {\n  const { logger = noop } = options\n\n  const npmBinary = getNodePackageManager()\n  const exacaOptions = {\n    cwd: local ? location : undefined,\n    env: {\n      /*\n       *  https://github.com/ipfs/npm-go-ipfs-dep/blob/v0.4.21/src/index.js#L71\n       */\n      GO_IPFS_DIST_URL: distUrl,\n      /*\n       *  specifying `TARGET_VERSION` here, will throw an error, because:\n       *  https://github.com/ipfs/npm-go-ipfs/blob/master/link-ipfs.js#L49\n       */\n      // TARGET_VERSION: distVersion\n    },\n  }\n  const npmArgs = [\n    'install',\n    `go-ipfs@${distVersion}`,\n    local ? '--save' : '--global',\n  ]\n\n  const logPrefix = `npm ${npmArgs.join(' ')}:`\n  const installProcess = execa(npmBinary, npmArgs, exacaOptions)\n\n  installProcess.stdout.on('data', data => {\n    if (data) logger(`${logPrefix} ${data}`)\n  })\n\n  try {\n    return await installProcess\n  } catch (err) {\n    if (err.stderr && err.stderr.includes('No matching version found')) {\n      throw new Error(\n        `NPM cannot find version ${distVersion}. For more versions see: http://npmjs.com/package/go-ipfs?activeTab=versions`\n      )\n    } else {\n      throw new Error(err)\n    }\n  }\n}\n"],"file":"install.js"}