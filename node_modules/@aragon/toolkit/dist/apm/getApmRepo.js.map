{"version":3,"sources":["../../src/apm/getApmRepo.js"],"names":["LATEST_VERSION","web3","apmRepoName","apmOptions","apmRepoVersion","progressHandler","apm","info","getLatestVersion","DEFAULT_IPFS_TIMEOUT","getVersion","split"],"mappings":";;;;;;;AAAA;;AAEA;;;;AADA;AAGA,MAAMA,cAAc,GAAG,QAAvB;AAEA;;;;;;;;;;;;;;eAae,OACbC,IADa,EAEbC,WAFa,EAGbC,UAHa,EAIbC,cAAc,GAAGJ,cAJJ,EAKbK,eAAe,GAAG,MAAM,CAAE,CALb,KAMV;AACH,MAAIA,eAAJ,EAAqB;AACnBA,IAAAA,eAAe,CAAC,CAAD,CAAf;AACD,GAHE,CAKH;AACA;;;AACA,QAAMC,GAAG,GAAG,MAAM,kBAASL,IAAT,EAAeE,UAAf,CAAlB;;AAEA,MAAIE,eAAJ,EAAqB;AACnBA,IAAAA,eAAe,CAAC,CAAD,CAAf;AACD,GAXE,CAaH;AACA;;;AACA,QAAME,IAAI,GACRH,cAAc,KAAKJ,cAAnB,GACI,MAAMM,GAAG,CAACE,gBAAJ,CAAqBN,WAArB,EAAkCO,+BAAlC,CADV,GAEI,MAAMH,GAAG,CAACI,UAAJ,CACJR,WADI,EAEJE,cAAc,CAACO,KAAf,CAAqB,GAArB,CAFI,EAGJF,+BAHI,CAHZ;AASA,SAAOF,IAAP;AACD,C","sourcesContent":["import aragonPM from '@aragon/apm'\n//\nimport { DEFAULT_IPFS_TIMEOUT } from '../helpers/constants'\n\nconst LATEST_VERSION = 'latest'\n\n/**\n *\n * Progress callback will be invoked with the following integers:\n * (1) - Initialize aragonPM object-contract comunication\n * (2) - Fetch aragonPM contracts and retrive an object containing version info about the aragonPM repo\n *\n * @param {*} web3 todo\n * @param {*} apmRepoName todo\n * @param {*} apmOptions todo\n * @param {*} apmRepoVersion todo\n * @param {*} progressHandler todo\n * @returns {*} todo\n */\nexport default async (\n  web3,\n  apmRepoName,\n  apmOptions,\n  apmRepoVersion = LATEST_VERSION,\n  progressHandler = () => {}\n) => {\n  if (progressHandler) {\n    progressHandler(1)\n  }\n\n  // TODO: something like const apmOptions = getEnvrionment().apm\n  // Prepare aragonPM object that can comunicate with the apm contracts.\n  const apm = await aragonPM(web3, apmOptions)\n\n  if (progressHandler) {\n    progressHandler(2)\n  }\n\n  // Query the apm contracts to retrieve an object\n  // containing version info about the apm repo.\n  const info =\n    apmRepoVersion === LATEST_VERSION\n      ? await apm.getLatestVersion(apmRepoName, DEFAULT_IPFS_TIMEOUT)\n      : await apm.getVersion(\n          apmRepoName,\n          apmRepoVersion.split('.'),\n          DEFAULT_IPFS_TIMEOUT\n        )\n\n  return info\n}\n"],"file":"getApmRepo.js"}