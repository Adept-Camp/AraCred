"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _ACL = require("@aragon/abis/os/artifacts/ACL");

var _AragonApp = require("@aragon/abis/os/artifacts/AragonApp");

var _Kernel = require("@aragon/abis/os/artifacts/Kernel");

var _Repo = require("@aragon/abis/os/artifacts/Repo");

var _util = require("../../util");

var _default = web3 => {
  const getACL = async repoAddr => {
    const repo = new web3.eth.Contract(_AragonApp.abi, repoAddr);
    const daoAddr = await repo.methods.kernel().call();
    const dao = new web3.eth.Contract(_Kernel.abi, daoAddr);
    const aclAddr = await dao.methods.acl().call();
    return new web3.eth.Contract(_ACL.abi, aclAddr);
  };

  const getRoleId = async repoAddr => {
    const repo = new web3.eth.Contract(_Repo.abi, repoAddr);
    return repo.methods.CREATE_VERSION_ROLE().call();
  };

  return {
    grant: async (repoAddr, grantee) => {
      const acl = await getACL(repoAddr);
      const roleId = await getRoleId(repoAddr);
      const call = acl.methods.grantPermission(grantee, repoAddr, roleId);
      const estimatedGas = call.estimateGas();
      return {
        to: acl.options.address,
        data: call.encodeABI(),
        gas: await (0, _util.getRecommendedGasLimit)(web3, estimatedGas)
      };
    }
  };
};

exports.default = _default;
//# sourceMappingURL=acl.js.map